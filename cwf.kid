KIDS Distribution saved on Sep 17, 2013@00:12:48
CAREWEB ENHANCEMENTS 1.1
**KIDS**:CAREWEB ENHANCEMENTS 3.0^

**INSTALL NAME**
CAREWEB ENHANCEMENTS 3.0
"BLD",3067,0)
CAREWEB ENHANCEMENTS 3.0^VUECENTRIC COMPONENTS^0^3130917^n
"BLD",3067,1,0)
^^1^1^3030602.105328
"BLD",3067,1,1,0)
Collection of components for EHR.
"BLD",3067,4,0)
^9.64PA^19930.5^6
"BLD",3067,4,8989.51,0)
8989.51
"BLD",3067,4,8989.51,222)
y^y^f^^y^^y^r^n
"BLD",3067,4,8989.51,224)
I $$SCRN^CIAVINX(Y,2)
"BLD",3067,4,8989.52,0)
8989.52
"BLD",3067,4,8989.52,222)
y^y^f^^y^^y^r^n
"BLD",3067,4,8989.52,224)
I $$SCRN^CIAVINX(Y,3)
"BLD",3067,4,19930.2,0)
19930.2
"BLD",3067,4,19930.2,222)
y^y^f^^y^^y^o^n
"BLD",3067,4,19930.2,224)
I $$SCRN^CIAVINX(Y,1)
"BLD",3067,4,19930.3,0)
19930.3
"BLD",3067,4,19930.3,222)
y^y^f^^y^^y^o^n
"BLD",3067,4,19930.3,224)
I $$SCRN^CIAVINX(Y,4)
"BLD",3067,4,19930.5,0)
19930.5
"BLD",3067,4,19930.5,222)
y^y^f^^n^^y^o^n
"BLD",3067,4,19941.21,0)
19941.21
"BLD",3067,4,19941.21,222)
y^y^f^^y^^y^o^n
"BLD",3067,4,19941.21,224)
I $$SCRN^CIAVINX(Y,5)
"BLD",3067,4,"B",8989.51,8989.51)

"BLD",3067,4,"B",8989.52,8989.52)

"BLD",3067,4,"B",19930.2,19930.2)

"BLD",3067,4,"B",19930.3,19930.3)

"BLD",3067,4,"B",19930.5,19930.5)

"BLD",3067,4,"B",19941.21,19941.21)

"BLD",3067,6.3)
15
"BLD",3067,"ABPKG")
n
"BLD",3067,"INI")
PRE^CIAOINIT
"BLD",3067,"INIT")
POST^CIAOINIT
"BLD",3067,"KRN",0)
^9.67PA^9002226^21
"BLD",3067,"KRN",.4,0)
.4
"BLD",3067,"KRN",.401,0)
.401
"BLD",3067,"KRN",.402,0)
.402
"BLD",3067,"KRN",.403,0)
.403
"BLD",3067,"KRN",.5,0)
.5
"BLD",3067,"KRN",.84,0)
.84
"BLD",3067,"KRN",3.6,0)
3.6
"BLD",3067,"KRN",3.8,0)
3.8
"BLD",3067,"KRN",9.2,0)
9.2
"BLD",3067,"KRN",9.8,0)
9.8
"BLD",3067,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",3067,"KRN",9.8,"NM",1,0)
BEHOPTPS^^0^B4919168
"BLD",3067,"KRN",9.8,"NM",2,0)
CIANBACT^^0^B32294268
"BLD",3067,"KRN",9.8,"NM",3,0)
CIANBRPC^^0^B60754770
"BLD",3067,"KRN",9.8,"NM",4,0)
CIAVCXUS^^0^B4534977
"BLD",3067,"KRN",9.8,"NM",5,0)
CIAVMRPC^^0^B20575218
"BLD",3067,"KRN",9.8,"NM",6,0)
CIAVMSER^^0^B13118426
"BLD",3067,"KRN",9.8,"NM",7,0)
CIAVUTPR^^0^B2426270
"BLD",3067,"KRN",9.8,"NM","B","BEHOPTPS",1)

"BLD",3067,"KRN",9.8,"NM","B","CIANBACT",2)

"BLD",3067,"KRN",9.8,"NM","B","CIANBRPC",3)

"BLD",3067,"KRN",9.8,"NM","B","CIAVCXUS",4)

"BLD",3067,"KRN",9.8,"NM","B","CIAVMRPC",5)

"BLD",3067,"KRN",9.8,"NM","B","CIAVMSER",6)

"BLD",3067,"KRN",9.8,"NM","B","CIAVUTPR",7)

"BLD",3067,"KRN",19,0)
19
"BLD",3067,"KRN",19.1,0)
19.1
"BLD",3067,"KRN",101,0)
101
"BLD",3067,"KRN",409.61,0)
409.61
"BLD",3067,"KRN",771,0)
771
"BLD",3067,"KRN",779.2,0)
779.2
"BLD",3067,"KRN",870,0)
870
"BLD",3067,"KRN",8989.51,0)
8989.51
"BLD",3067,"KRN",8989.52,0)
8989.52
"BLD",3067,"KRN",8994,0)
8994
"BLD",3067,"KRN",8994,"NM",0)
^9.68A^8^8
"BLD",3067,"KRN",8994,"NM",1,0)
BEHOPTPL LISTINFO1^^0
"BLD",3067,"KRN",8994,"NM",2,0)
BEHOPTPS SEARCH^^0
"BLD",3067,"KRN",8994,"NM",3,0)
CIAVCXUS GETPRIV^^0
"BLD",3067,"KRN",8994,"NM",4,0)
CIAVMRPC GETPARPF^^0
"BLD",3067,"KRN",8994,"NM",5,0)
CIAVMSER GETBYIEN^^0
"BLD",3067,"KRN",8994,"NM",6,0)
CIAVMSER GETBYKEY^^0
"BLD",3067,"KRN",8994,"NM",7,0)
CIAVMSER GETBYLST^^0
"BLD",3067,"KRN",8994,"NM",8,0)
CIAVUTPR GETINST^^0
"BLD",3067,"KRN",8994,"NM","B","BEHOPTPL LISTINFO1",1)

"BLD",3067,"KRN",8994,"NM","B","BEHOPTPS SEARCH",2)

"BLD",3067,"KRN",8994,"NM","B","CIAVCXUS GETPRIV",3)

"BLD",3067,"KRN",8994,"NM","B","CIAVMRPC GETPARPF",4)

"BLD",3067,"KRN",8994,"NM","B","CIAVMSER GETBYIEN",5)

"BLD",3067,"KRN",8994,"NM","B","CIAVMSER GETBYKEY",6)

"BLD",3067,"KRN",8994,"NM","B","CIAVMSER GETBYLST",7)

"BLD",3067,"KRN",8994,"NM","B","CIAVUTPR GETINST",8)

"BLD",3067,"KRN",9002226,0)
9002226
"BLD",3067,"KRN",9002226,"NM",0)
^9.68A^^
"BLD",3067,"KRN","B",.4,.4)

"BLD",3067,"KRN","B",.401,.401)

"BLD",3067,"KRN","B",.402,.402)

"BLD",3067,"KRN","B",.403,.403)

"BLD",3067,"KRN","B",.5,.5)

"BLD",3067,"KRN","B",.84,.84)

"BLD",3067,"KRN","B",3.6,3.6)

"BLD",3067,"KRN","B",3.8,3.8)

"BLD",3067,"KRN","B",9.2,9.2)

"BLD",3067,"KRN","B",9.8,9.8)

"BLD",3067,"KRN","B",19,19)

"BLD",3067,"KRN","B",19.1,19.1)

"BLD",3067,"KRN","B",101,101)

"BLD",3067,"KRN","B",409.61,409.61)

"BLD",3067,"KRN","B",771,771)

"BLD",3067,"KRN","B",779.2,779.2)

"BLD",3067,"KRN","B",870,870)

"BLD",3067,"KRN","B",8989.51,8989.51)

"BLD",3067,"KRN","B",8989.52,8989.52)

"BLD",3067,"KRN","B",8994,8994)

"BLD",3067,"KRN","B",9002226,9002226)

"BLD",3067,"PRET")
GBL^CIAVINX
"BLD",3067,"QUES",0)
^9.62^^
"BLD",3067,"REQB",0)
^9.611^1^1
"BLD",3067,"REQB",1,0)
VUECENTRIC COMPONENTS 1.1^2
"BLD",3067,"REQB","B","VUECENTRIC COMPONENTS 1.1",1)

"DATA",8989.51,372,0)
CAREWEB.PATIENT.LIST.PERSONAL^User Personal List^1^Enter List Name
"DATA",8989.51,372,1)
W
"DATA",8989.51,372,6)
F
"DATA",8989.51,372,7)
K:'$L(X) X
"DATA",8989.51,372,30,0)
^8989.513I^1^1
"DATA",8989.51,372,30,1,0)
1^200
"DATA",8989.51,373,0)
CAREWEB.PATIENT.LIST.MRU^Recent Patient Selections^0
"DATA",8989.51,373,1)
W
"DATA",8989.51,373,6)
F
"DATA",8989.51,373,30,0)
^8989.513I^1^1
"DATA",8989.51,373,30,1,0)
1^200
"DATA",8989.51,374,0)
CAREWEB.PATIENT.LIST.DATES^Default date ranges:^^^Edit Value?
"DATA",8989.51,374,1)
W^^Enter Y to edit, @ to delete.
"DATA",8989.51,374,2)
S:"Yy"'[Y Y=""
"DATA",8989.51,374,30,0)
^8989.513I^1^1
"DATA",8989.51,374,30,1,0)
100^4.2
"DATA",8989.51,375,0)
CAREWEB.INITIAL.SECTION^Initial component to display.^1
"DATA",8989.51,375,1)
F
"DATA",8989.51,375,6)
F
"DATA",8989.51,375,30,0)
^8989.513I^2^2
"DATA",8989.51,375,30,1,0)
10^200
"DATA",8989.51,375,30,2,0)
20^4.2
"DATA",8989.51,376,0)
CAREWEB.LAYOUT.SHARED^^1
"DATA",8989.51,376,1)
W
"DATA",8989.51,376,6)
F
"DATA",8989.51,376,30,0)
^8989.513I^1^1
"DATA",8989.51,376,30,1,0)
10^4.2
"DATA",8989.51,377,0)
CAREWEB.LAYOUT.ASSOCIATION^^1
"DATA",8989.51,377,1)
F
"DATA",8989.51,377,6)
F
"DATA",8989.51,377,30,0)
^8989.513I^1^1
"DATA",8989.51,377,30,1,0)
10^4.2
"DATA",8989.51,378,0)
CAREWEB.PATIENT.LIST.FAVORITES^Favorite patient list settings^1^Favorite
"DATA",8989.51,378,1)
W
"DATA",8989.51,378,6)
F
"DATA",8989.51,378,30,0)
^8989.513I^1^1
"DATA",8989.51,378,30,1,0)
10^200
"DATA",8989.51,379,0)
CAREWEB.PATIENT.LIST.MRU.SIZE^Maximum list size for MRU list.^0
"DATA",8989.51,379,1)
N
"DATA",8989.51,379,30,0)
^8989.513I^1^1
"DATA",8989.51,379,30,1,0)
10^200
"DATA",8989.51,380,0)
CAREWEB.THEME^Default CareWeb theme.^0
"DATA",8989.51,380,1)
F
"DATA",8989.51,380,30,0)
^8989.513I^2^2
"DATA",8989.51,380,30,1,0)
10^4.2
"DATA",8989.51,380,30,2,0)
5^200
"DATA",8989.51,381,0)
CAREWEB.SAVED.RESPONSES^Saved dialog responses.^1
"DATA",8989.51,381,1)
F
"DATA",8989.51,381,6)
F
"DATA",8989.51,381,30,0)
^8989.513I^1^1
"DATA",8989.51,381,30,1,0)
10^200
"DATA",8989.51,382,0)
CAREWEB.PATIENT.FORCE.SELECT^Force patient selection at start.^0^^Force patient selection at startup?
"DATA",8989.51,382,1)
Y^^Forces patient selection at application startup.
"DATA",8989.51,382,6)
N
"DATA",8989.51,382,20,0)
^^1^1^3110609.171648
"DATA",8989.51,382,20,1,0)
If yes, patient selection is forced at application startup.
"DATA",8989.51,382,30,0)
^8989.513I^3^3
"DATA",8989.51,382,30,1,0)
100^200
"DATA",8989.51,382,30,2,0)
200^4
"DATA",8989.51,382,30,3,0)
300^4.2
"DATA",8989.51,383,0)
CAREWEB.LOCATION.DEFAULT^Default encounter location.^0
"DATA",8989.51,383,1)
N
"DATA",8989.51,383,30,0)
^8989.513I^1^1
"DATA",8989.51,383,30,1,0)
10^200
"DATA",8989.51,384,0)
DATABASE.NAME^Database name^0
"DATA",8989.51,384,1)
F
"DATA",8989.51,384,6)
N
"DATA",8989.51,384,30,0)
^8989.513I^1^1
"DATA",8989.51,384,30,1,0)
10^4.2
"DATA",8989.51,385,0)
DATABASE.BACKGROUNDCOLOR^Background color for this database.^0
"DATA",8989.51,385,1)
F^
"DATA",8989.51,385,6)
N
"DATA",8989.51,385,30,0)
^8989.513I^1^1
"DATA",8989.51,385,30,1,0)
10^4.2
"DATA",8989.51,386,0)
CAREWEB.LAYOUT.PRIVATE^^1
"DATA",8989.51,386,1)
W
"DATA",8989.51,386,6)
F
"DATA",8989.51,386,30,0)
^8989.513I^1^1
"DATA",8989.51,386,30,1,0)
10^4.2
"DATA",19930.5,1,0)
Encounter^9000010
"DATA",19930.5,1,10,0)
^19930.51^4^4
"DATA",19930.5,1,10,1,0)
dateTime^.01^D
"DATA",19930.5,1,10,2,0)
locked^^C
"DATA",19930.5,1,10,2,10)
D PUTBL("locked",$$ISLOCKED^BEHOENCX(IEN))
"DATA",19930.5,1,10,3,0)
serviceCategory^.07^C
"DATA",19930.5,1,10,3,10)
D:$L($G(VL("I"))) GETBYIEN(.DATA,"ServiceCategory",$A(VL("I")),PN)
"DATA",19930.5,1,10,4,0)
location^.22^O
"DATA",19930.5,1,10,4,10)
Location
"DATA",19930.5,2,0)
ICD9^80
"DATA",19930.5,2,10,0)
^19930.51^3^3
"DATA",19930.5,2,10,1,0)
code^.01^F
"DATA",19930.5,2,10,2,0)
shortDescription^3^F
"DATA",19930.5,2,10,3,0)
longDescription^10^F
"DATA",19930.5,3,0)
Institution^4
"DATA",19930.5,3,10,0)
^19930.51^2^2
"DATA",19930.5,3,10,1,0)
name^.01^F
"DATA",19930.5,3,10,2,0)
abbreviation^.05^F
"DATA",19930.5,4,0)
Location^44
"DATA",19930.5,4,10,0)
^19930.51^3^3
"DATA",19930.5,4,10,1,0)
name^.01^F
"DATA",19930.5,4,10,2,0)
abbreviation^1^F
"DATA",19930.5,4,10,3,0)
institution^3^O
"DATA",19930.5,4,10,3,10)
Institution
"DATA",19930.5,5,0)
Patient^2
"DATA",19930.5,5,10,0)
^19930.51^9^9
"DATA",19930.5,5,10,1,0)
fullName^.01^F
"DATA",19930.5,5,10,2,0)
gender^.02^R
"DATA",19930.5,5,10,3,0)
birthDate^.03^D
"DATA",19930.5,5,10,4,0)
bed^.101^F
"DATA",19930.5,5,10,5,0)
deathDate^.351^D
"DATA",19930.5,5,10,6,0)
medicalRecordNumber^^C
"DATA",19930.5,5,10,6,10)
D PUTQT(PN,$$HRN^BEHOPTCX(IEN))
"DATA",19930.5,5,10,7,0)
sensitive^^C
"DATA",19930.5,5,10,7,10)
D PUTBL(PN,$$ISSENS^BEHOPTCX(IEN))
"DATA",19930.5,5,10,8,0)
institution^^C
"DATA",19930.5,5,10,8,10)
D GETBYIEN(.DATA,"Institution",DUZ(2),PN)
"DATA",19930.5,5,10,9,0)
location^.1^O
"DATA",19930.5,5,10,9,10)
Location
"DATA",19930.5,6,0)
PropDefinition^8989.51
"DATA",19930.5,6,10,0)
^19930.51^6^6
"DATA",19930.5,6,10,1,0)
name^.01^F
"DATA",19930.5,6,10,2,0)
displayName^.02^F
"DATA",19930.5,6,10,3,0)
multiValued^.03^B
"DATA",19930.5,6,10,4,0)
readOnly^.06^B
"DATA",19930.5,6,10,5,0)
dataType^1.1^R
"DATA",19930.5,6,10,5,10)

"DATA",19930.5,6,10,6,0)
description^20^W
"DATA",19930.5,7,0)
Provider^200
"DATA",19930.5,7,10,0)
^19930.51^3^3
"DATA",19930.5,7,10,1,0)
fullName^.01^F
"DATA",19930.5,7,10,2,0)
birthDate^5^D
"DATA",19930.5,7,10,3,0)
institution^^C
"DATA",19930.5,7,10,3,10)
D GETBYIEN(.DATA,"Institution",DUZ(2),PN)
"DATA",19930.5,8,0)
ServiceCategory
"DATA",19930.5,8,1)
SSVCCAT^CIAVMSER
"DATA",19930.5,9,0)
User^200
"DATA",19930.5,9,10,0)
^19930.51^3^3
"DATA",19930.5,9,10,1,0)
fullName^.01^F
"DATA",19930.5,9,10,2,0)
birthDate^5^D
"DATA",19930.5,9,10,3,0)
institution^^C
"DATA",19930.5,9,10,3,10)
D GETBYIEN(.DATA,"Institution",DUZ(2),PN)
"DATA",19930.5,10,0)
Problem^9000011
"DATA",19930.5,11,0)
ProblemNote
"DATA",19930.5,12,0)
Refusal
"DATA",19930.5,13,0)
SkinTest
"DATA",19930.5,14,0)
EncounterProvider
"FIA",8989.51)
PARAMETER DEFINITION
"FIA",8989.51,0)
^XTV(8989.51,
"FIA",8989.51,0,0)
8989.51I
"FIA",8989.51,0,1)
y^y^f^^y^^y^r^n
"FIA",8989.51,0,10)

"FIA",8989.51,0,11)
I $$SCRN^CIAVINX(Y,2)
"FIA",8989.51,0,"RLRO")

"FIA",8989.51,0,"VR")
1.1^CAREWEB ENHANCEMENTS
"FIA",8989.51,8989.51)
0
"FIA",8989.51,8989.512)
0
"FIA",8989.51,8989.513)
0
"FIA",8989.51,8989.514)
0
"FIA",8989.52)
PARAMETER TEMPLATE
"FIA",8989.52,0)
^XTV(8989.52,
"FIA",8989.52,0,0)
8989.52I
"FIA",8989.52,0,1)
y^y^f^^y^^y^r^n
"FIA",8989.52,0,10)

"FIA",8989.52,0,11)
I $$SCRN^CIAVINX(Y,3)
"FIA",8989.52,0,"RLRO")

"FIA",8989.52,0,"VR")
1.1^CAREWEB ENHANCEMENTS
"FIA",8989.52,8989.52)
0
"FIA",8989.52,8989.521)
0
"FIA",19930.2)
VUECENTRIC OBJECT REGISTRY
"FIA",19930.2,0)
^CIAVOBJ(19930.2,
"FIA",19930.2,0,0)
19930.2
"FIA",19930.2,0,1)
y^y^f^^y^^y^o^n
"FIA",19930.2,0,10)

"FIA",19930.2,0,11)
I $$SCRN^CIAVINX(Y,1)
"FIA",19930.2,0,"RLRO")

"FIA",19930.2,0,"VR")
1.1^CAREWEB ENHANCEMENTS
"FIA",19930.2,19930.2)
0
"FIA",19930.2,19930.201)
0
"FIA",19930.2,19930.202)
0
"FIA",19930.2,19930.203)
0
"FIA",19930.2,19930.204)
0
"FIA",19930.2,19930.206)
0
"FIA",19930.2,19930.209)
0
"FIA",19930.2,19930.221)
0
"FIA",19930.2,19930.223)
0
"FIA",19930.2,19930.298)
0
"FIA",19930.3)
VUECENTRIC TEMPLATE REGISTRY
"FIA",19930.3,0)
^CIAVTPL(
"FIA",19930.3,0,0)
19930.3
"FIA",19930.3,0,1)
y^y^f^^y^^y^o^n
"FIA",19930.3,0,10)

"FIA",19930.3,0,11)
I $$SCRN^CIAVINX(Y,4)
"FIA",19930.3,0,"RLRO")

"FIA",19930.3,0,"VR")
1.1^CAREWEB ENHANCEMENTS
"FIA",19930.3,19930.3)
0
"FIA",19930.3,19930.301)
0
"FIA",19930.5)
VUECENTRIC SERIALIZATION
"FIA",19930.5,0)
^CIAVSER(
"FIA",19930.5,0,0)
19930.5
"FIA",19930.5,0,1)
y^y^f^^n^^y^o^n
"FIA",19930.5,0,10)

"FIA",19930.5,0,11)

"FIA",19930.5,0,"RLRO")

"FIA",19930.5,0,"VR")
1.1^CAREWEB ENHANCEMENTS
"FIA",19930.5,19930.5)
0
"FIA",19930.5,19930.51)
0
"FIA",19941.21)
CIA EVENT TYPE
"FIA",19941.21,0)
^CIANB(19941.21,
"FIA",19941.21,0,0)
19941.21
"FIA",19941.21,0,1)
y^y^f^^y^^y^o^n
"FIA",19941.21,0,10)

"FIA",19941.21,0,11)
I $$SCRN^CIAVINX(Y,5)
"FIA",19941.21,0,"RLRO")

"FIA",19941.21,0,"VR")
1.1^CAREWEB ENHANCEMENTS
"FIA",19941.21,19941.21)
0
"FIA",19941.21,19941.212)
0
"FIA",19941.21,19941.2121)
0
"FIA",19941.21,19941.2199)
0
"INI")
PRE^CIAOINIT
"INIT")
POST^CIAOINIT
"KRN",8994,3027,-1)
0^1
"KRN",8994,3027,0)
BEHOPTPL LISTINFO1^LISTINFO^BEHOPTPL^1
"KRN",8994,3028,-1)
0^2
"KRN",8994,3028,0)
BEHOPTPS SEARCH^SEARCH^BEHOPTPS^4^^^^1
"KRN",8994,3029,-1)
0^5
"KRN",8994,3029,0)
CIAVMSER GETBYIEN^GETBYIEN^CIAVMSER^2^^^^1
"KRN",8994,3030,-1)
0^6
"KRN",8994,3030,0)
CIAVMSER GETBYKEY^GETBYKEY^CIAVMSER^2^^^^1
"KRN",8994,3031,-1)
0^7
"KRN",8994,3031,0)
CIAVMSER GETBYLST^GETBYLST^CIAVMSER^2^^^^1
"KRN",8994,3032,-1)
0^3
"KRN",8994,3032,0)
CIAVCXUS GETPRIV^GETPRIV^CIAVCXUS^2^^^^1
"KRN",8994,3033,-1)
0^4
"KRN",8994,3033,0)
CIAVMRPC GETPARPF^GETPARPF^CIAVMRPC^2^^^^1
"KRN",8994,3034,-1)
0^8
"KRN",8994,3034,0)
CIAVUTPR GETINST^GETINST^CIAVUTPR^2^^^^1
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PGL",8989.52,0,3,.03)
USE ENTITY FROM^*P1'^DIC(^0;3^S DIC("S")="I $$ALLOW^XPARDD1(Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",8989.52,0,4,.04)
USE INSTANCE FROM^P8989.51'^XTV(8989.51,^0;4^Q
"PGL",8989.521,0,2,.02)
PARAMETER^P8989.51'^XTV(8989.51,^0;2^Q
"PGL",19941.21,0,7,7)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"PKG",336,-1)
1^1
"PKG",336,0)
VUECENTRIC COMPONENTS^CIAO^Add-on components for VueCentric application.
"PKG",336,20,0)
^9.402P^^
"PKG",336,22,0)
^9.49I^1^1
"PKG",336,22,1,0)
1.1^3130917^3120523^1
"PKG",336,22,1,1,0)
^^1^1^3130917
"PKG",336,22,1,1,1,0)
Collection of components for EHR.
"PKG",336,22,1,"PAH",0)
^9.4901^12^12
"PKG",336,22,1,"PAH",1,0)
002001^3090204^1
"PKG",336,22,1,"PAH",1,1,0)
^^1^1^3090204
"PKG",336,22,1,"PAH",1,1,1,0)
Support for the VueCentric Chat service.
"PKG",336,22,1,"PAH",2,0)
004001^3090204^1
"PKG",336,22,1,"PAH",2,1,0)
^^1^1^3090204
"PKG",336,22,1,"PAH",2,1,1,0)
Support for the VueCentric Image component.
"PKG",336,22,1,"PAH",3,0)
003001^3090204^1
"PKG",336,22,1,"PAH",3,1,0)
^^1^1^3090204
"PKG",336,22,1,"PAH",3,1,1,0)
Support for the VueCentric Internet Explorer wrapper component.
"PKG",336,22,1,"PAH",4,0)
008001^3090204^1
"PKG",336,22,1,"PAH",4,1,0)
^^1^1^3090204
"PKG",336,22,1,"PAH",4,1,1,0)
Support for the VueCentric Message Broadcast component.
"PKG",336,22,1,"PAH",5,0)
009001^3090204^1
"PKG",336,22,1,"PAH",5,1,0)
^^1^1^3090204
"PKG",336,22,1,"PAH",5,1,1,0)
Support for the VueCentric Patient Photo component.
"PKG",336,22,1,"PAH",6,0)
005001^3090204^1
"PKG",336,22,1,"PAH",6,1,0)
^^1^1^3090204
"PKG",336,22,1,"PAH",6,1,1,0)
Support for the VueCentric Program Launcher component.
"PKG",336,22,1,"PAH",7,0)
006001^3090204^1
"PKG",336,22,1,"PAH",7,1,0)
^^1^1^3090204
"PKG",336,22,1,"PAH",7,1,1,0)
Support for the VueCentric Telnet component.
"PKG",336,22,1,"PAH",8,0)
010002^3051228^1
"PKG",336,22,1,"PAH",8,1,0)
^^1^1^3051228
"PKG",336,22,1,"PAH",8,1,1,0)
Support for the VueCentric vcQuickNote component.
"PKG",336,22,1,"PAH",9,0)
011001^3060111^1
"PKG",336,22,1,"PAH",9,1,0)
^^1^1^3060111
"PKG",336,22,1,"PAH",9,1,1,0)
Support for the VueCentric Women's Health components.
"PKG",336,22,1,"PAH",10,0)
013001^3100527^1
"PKG",336,22,1,"PAH",10,1,0)
^^1^1^3100527
"PKG",336,22,1,"PAH",10,1,1,0)
Support for the VueCentric Imaging functionality and service.
"PKG",336,22,1,"PAH",11,0)
010003^3110202.074417^1
"PKG",336,22,1,"PAH",11,1,0)
^^1^1^3110202
"PKG",336,22,1,"PAH",11,1,1,0)
Support for the VueCentric vcQuickNote component.
"PKG",336,22,1,"PAH",12,0)
013002^3110112.083304^1
"PKG",336,22,1,"PAH",12,1,0)
^^1^1^3110112
"PKG",336,22,1,"PAH",12,1,1,0)
Support for the VueCentric Imaging functionality and service.
"PKG",336,22,1,"PAH","B","002001",1)

"PKG",336,22,1,"PAH","B","003001",3)

"PKG",336,22,1,"PAH","B","004001",2)

"PKG",336,22,1,"PAH","B","005001",6)

"PKG",336,22,1,"PAH","B","006001",7)

"PKG",336,22,1,"PAH","B","008001",4)

"PKG",336,22,1,"PAH","B","009001",5)

"PKG",336,22,1,"PAH","B","010002",8)

"PKG",336,22,1,"PAH","B","010003",11)

"PKG",336,22,1,"PAH","B","011001",9)

"PKG",336,22,1,"PAH","B","013001",10)

"PKG",336,22,1,"PAH","B","013002",12)

"PKG",336,"VERSION")
1.1
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","BEHOPTPS")
0^1^B4919168
"RTN","BEHOPTPS",1,0)
BEHOPTPS ;RGN/DKM - Patient search ;03-Jun-2011 13:39;DU
"RTN","BEHOPTPS",2,0)
 ;;1.0;BEH COMPONENTS;;02-Jun-2011 15:17;Build 15
"RTN","BEHOPTPS",3,0)
 ;=================================================================
"RTN","BEHOPTPS",4,0)
SEARCH(DATA,MAX,LNAME,FNAME,MRN,SSN,IEN,SEX,DOB) ;EP
"RTN","BEHOPTPS",5,0)
 N CNT
"RTN","BEHOPTPS",6,0)
 S DATA=$$TMPGBL^CIAVMRPC,CNT=0
"RTN","BEHOPTPS",7,0)
 S MAX=$G(MAX,100),LNAME=$G(LNAME),FNAME=$G(FNAME)
"RTN","BEHOPTPS",8,0)
 S MRN=$G(MRN),SSN=$G(SSN),SEX=$G(SEX),DOB=+$G(DOB),IEN=+$G(IEN)
"RTN","BEHOPTPS",9,0)
 I IEN D  Q
"RTN","BEHOPTPS",10,0)
 .N X
"RTN","BEHOPTPS",11,0)
 .D IENLKP^BEHOPTPL(.X,IEN),ADD(.X)
"RTN","BEHOPTPS",12,0)
 I $L(MRN) D  Q
"RTN","BEHOPTPS",13,0)
 .N X
"RTN","BEHOPTPS",14,0)
 .D HRNLKP^BEHOPTPL(.X,MRN)
"RTN","BEHOPTPS",15,0)
 .M @DATA=X
"RTN","BEHOPTPS",16,0)
 I $L(SSN) D  Q
"RTN","BEHOPTPS",17,0)
 .D LOOKUP^BEHOPTPL(.DATA,SSN)
"RTN","BEHOPTPS",18,0)
 I $L(LNAME)<3 D  Q
"RTN","BEHOPTPS",19,0)
 .D ERROR("You must at least supply a SSN, MRN, or last name (minimum 3 characters).")
"RTN","BEHOPTPS",20,0)
 N IEN,GBL,QUALS,DEMO,FROM,LLEN,FLEN,NAME,X0
"RTN","BEHOPTPS",21,0)
 S LNAME=$$UP^XLFSTR(LNAME),FNAME=$$UP^XLFSTR(FNAME),SEX=$$UP^XLFSTR(SEX)
"RTN","BEHOPTPS",22,0)
 S FROM=LNAME,LLEN=$L(LNAME),FLEN=$L(FNAME)
"RTN","BEHOPTPS",23,0)
 S DEMO=$$LKPQUAL^BEHOPTCX("@BEHOPTCX DEMO MODE",.QUALS)
"RTN","BEHOPTPS",24,0)
 I DEMO D
"RTN","BEHOPTPS",25,0)
 .S IEN=0,GBL=$NA(^TMP("BEHOPTPL",$J))
"RTN","BEHOPTPS",26,0)
 .K @GBL
"RTN","BEHOPTPS",27,0)
 .F  S IEN=$O(^DPT("ATEST",IEN)) Q:'IEN  S @GBL@($E($P(^DPT(IEN,0),U),1,30),IEN)=""
"RTN","BEHOPTPS",28,0)
 E  I '$$LKPQUAL^BEHOPTCX("MSC DG ALL SITES HIPAA",.QUALS),$D(^DPT("ADIV",DUZ(2))) S GBL=$NA(^(DUZ(2)))
"RTN","BEHOPTPS",29,0)
 E  S GBL=$NA(^DPT("B"))
"RTN","BEHOPTPS",30,0)
 F  S FROM=$O(@GBL@(FROM)),IEN=0 Q:FROM=""  D  Q:CNT'<MAX
"RTN","BEHOPTPS",31,0)
 .F  S IEN=$O(@GBL@(FROM,IEN)) Q:'IEN  D  Q:CNT'<MAX
"RTN","BEHOPTPS",32,0)
 ..I 'DEMO,'($D(@GBL@(FROM,IEN))#2),$$LKPQUAL^BEHOPTCX("@BEHOPTCX IGNORE ALIASES",.QUALS) Q
"RTN","BEHOPTPS",33,0)
 ..Q:'$$ISACTIVE^BEHOPTCX(IEN,.QUALS)
"RTN","BEHOPTPS",34,0)
 ..S X0=^DPT(IEN,0),NAME=$P(X0,U)
"RTN","BEHOPTPS",35,0)
 ..I $E(NAME,1,LLEN)'=LNAME S MAX=-1 Q
"RTN","BEHOPTPS",36,0)
 ..I FLEN,$E($$TRIM^XLFSTR($P(NAME,",",2)),1,FLEN)'=FNAME Q
"RTN","BEHOPTPS",37,0)
 ..I DOB,+$P(X0,U,3)'=DOB Q
"RTN","BEHOPTPS",38,0)
 ..I $L(SEX),$P(X0,U,2)'=SEX Q
"RTN","BEHOPTPS",39,0)
 ..D ADD(IEN_U_NAME)
"RTN","BEHOPTPS",40,0)
 K:DEMO ^TMP("BEHOPTPL",$J)
"RTN","BEHOPTPS",41,0)
 Q
"RTN","BEHOPTPS",42,0)
ADD(X) S:$L($G(X)) CNT=CNT+1,@DATA@(CNT)=X
"RTN","BEHOPTPS",43,0)
 Q
"RTN","BEHOPTPS",44,0)
ERROR(X) D ADD("-1^"_X)
"RTN","BEHOPTPS",45,0)
 Q
"RTN","CIANBACT")
0^2^B32294268
"RTN","CIANBACT",1,0)
CIANBACT ;MSC/IND/DKM - MSC RPC Broker Actions;16-Apr-2010 11:55;DKM
"RTN","CIANBACT",2,0)
 ;;1.1;CIA NETWORK COMPONENTS;**001007**;Sep 18, 2007;Build 15
"RTN","CIANBACT",3,0)
 ;;Copyright 2000-2008, Medsphere Systems Corporation
"RTN","CIANBACT",4,0)
 ;=================================================================
"RTN","CIANBACT",5,0)
 ; Connect action
"RTN","CIANBACT",6,0)
 ; CIADATA is returned to client as:
"RTN","CIANBACT",7,0)
 ;   callback flag^authentication method^server version^case sensitive^context cached
"RTN","CIANBACT",8,0)
ACTC N X,Y,VOL,UCI,PORT,IP,AUTH
"RTN","CIANBACT",9,0)
 S Y=$$GETUCI,UCI(0)=Y,UCI=$$UP^XLFSTR($G(CIA("UCI"),Y)),VOL=$P(UCI,",",2)
"RTN","CIANBACT",10,0)
 S:'$L(UCI) UCI=Y
"RTN","CIANBACT",11,0)
 S:'$L(VOL) VOL=$P(Y,",",2),$P(UCI,",",2)=VOL
"RTN","CIANBACT",12,0)
 I UCI'=UCI(0),$$ERRCHK(0[$$UCICHECK^%ZOSV(UCI),14,UCI) Q
"RTN","CIANBACT",13,0)
 Q:$$ERRCHK('$L(VOL),11)
"RTN","CIANBACT",14,0)
 S AUTH=$$AUTHMETH(UCI),CIADATA="0^"_AUTH_"^1.1^"_$$GET^XPAR("SYS","XU VC CASE SENSITIVE")_"^1"
"RTN","CIANBACT",15,0)
 Q:$$ERRCHK('$L(AUTH),24,UCI)
"RTN","CIANBACT",16,0)
 I $D(^%ZOSF("ACTJ")) D  Q:$$ERRCHK(X'>Y&X,10,Y,X)
"RTN","CIANBACT",17,0)
 .; Y=# active jobs, X=max active jobs
"RTN","CIANBACT",18,0)
 .X ^%ZOSF("ACTJ")
"RTN","CIANBACT",19,0)
 .S X=+$O(^XTV(8989.3,1,4,"B",VOL,0)),X=$S(X:+$P($G(^XTV(8989.3,1,4,X,0)),U,3),1:0)
"RTN","CIANBACT",20,0)
 S PORT=CIA("LP"),X=$$CLIENTIP^CIAUOS,IP=$S(CIAMODE=2:CIAIP,$L(X):X,1:CIA("IP"))
"RTN","CIANBACT",21,0)
 S @("X=$$JOB"_CIAOS)
"RTN","CIANBACT",22,0)
 D ERRCHK('X,12)
"RTN","CIANBACT",23,0)
 Q
"RTN","CIANBACT",24,0)
 ; Disconnect action
"RTN","CIANBACT",25,0)
ACTD D RESET^CIANBRPC()
"RTN","CIANBACT",26,0)
 S CIADATA=1,CIAQUIT=1
"RTN","CIANBACT",27,0)
 Q
"RTN","CIANBACT",28,0)
 ; Query action
"RTN","CIANBACT",29,0)
ACTQ Q:$$ASYCHK^CIANBASY
"RTN","CIANBACT",30,0)
 Q:$$EVTCHK^CIANBEVT
"RTN","CIANBACT",31,0)
 ; Ping action
"RTN","CIANBACT",32,0)
ACTP S DT=$$NOW^XLFDT,CIADATA=$$PARAM^CIANBUTL("CIANB POLLING INTERVAL",1,60)_U_DT,DT=DT\1
"RTN","CIANBACT",33,0)
 Q
"RTN","CIANBACT",34,0)
 ; Subscribe action
"RTN","CIANBACT",35,0)
ACTS S CIADATA=1
"RTN","CIANBACT",36,0)
 Q:$$ERRCHK('$$SUBSCR^CIANBEVT(CIA("EVT"),1),13,CIA("EVT"))
"RTN","CIANBACT",37,0)
 Q
"RTN","CIANBACT",38,0)
 ; Unsubscribe action
"RTN","CIANBACT",39,0)
ACTU S CIADATA=$$SUBSCR^CIANBEVT(CIA("EVT"),0)
"RTN","CIANBACT",40,0)
 Q
"RTN","CIANBACT",41,0)
 ; RPC action
"RTN","CIANBACT",42,0)
ACTR N RPC,RTN,CIAD,XWBWRAP,XWBPTYPE,I
"RTN","CIANBACT",43,0)
 I '$D(CIA("CTX")) S CIA("CTX")=$$GETVAR^CIANBUTL("CTX")
"RTN","CIANBACT",44,0)
 E  D SETVAR^CIANBUTL("CTX",CIA("CTX"))
"RTN","CIANBACT",45,0)
 S:CIA("CTX")="" CIA("CTX")=$$GETVAR^CIANBUTL("AID")
"RTN","CIANBACT",46,0)
 S RPC=$$FIND1^DIC(8994,,"QX",$G(CIA("RPC")))
"RTN","CIANBACT",47,0)
 Q:$$ERRCHK('RPC,3)
"RTN","CIANBACT",48,0)
 S I=$G(^XWB(8994,RPC,0)),RTN=$P(I,U,2,3),XWBWRAP=+$P(I,U,8),XWBPTYPE=$P(I,U,4)
"RTN","CIANBACT",49,0)
 Q:$$ERRCHK($S($E($P(RTN,U,2),1,5)="CIANB":0,1:'$$CANRUN(RPC,CIA("CTX"))),4,CIA("RPC"),CIA("CTX"))
"RTN","CIANBACT",50,0)
 Q:$$ERRCHK("03"'[$P(I,U,6),5)
"RTN","CIANBACT",51,0)
 Q:$$ERRCHK(RTN'?.8AN1"^"1.8AN,6)
"RTN","CIANBACT",52,0)
 Q:$$ERRCHK("^1^2^3^4^5^H^"'[(U_XWBPTYPE_U),6)
"RTN","CIANBACT",53,0)
 Q:$$ERRCHK(ARG>40,7,,ARG,40)
"RTN","CIANBACT",54,0)
 I $G(CIA("ASY")) D
"RTN","CIANBACT",55,0)
 .N RD
"RTN","CIANBACT",56,0)
 .S RD="CIANB THREAD RESOURCE #"_$$GETVAR^CIANBUTL("RDEV")
"RTN","CIANBACT",57,0)
 .S CIAD=$$QUEUE^CIAUTSK("TASK^CIANBASY","ASYNC RPC: "_CIA("RPC"),,"RTN^XWBWRAP^XWBPTYPE^ARG^ARG(^CIA(^XWBOS^P*",RD)
"RTN","CIANBACT",58,0)
 .Q:$$ERRCHK(CIAD<1,8)
"RTN","CIANBACT",59,0)
 .S ^XTMP("CIA",CIA("UID"),"T",CIAD)=""
"RTN","CIANBACT",60,0)
 .D REPLY^CIANBLIS(CIAD)
"RTN","CIANBACT",61,0)
 E  D
"RTN","CIANBACT",62,0)
 .S:XWBPTYPE=4 CIAD=$$TMPGBL^CIANBRPC("X")
"RTN","CIANBACT",63,0)
 .D STREST^CIANBLIS(1),DORPC,DATAOUT
"RTN","CIANBACT",64,0)
 Q
"RTN","CIANBACT",65,0)
 ; Builds the RPC entry code and executes it
"RTN","CIANBACT",66,0)
DORPC N I,P,XWBAPVER,XQY,CIAQUIT,ALOG,$ET
"RTN","CIANBACT",67,0)
 S RTN=RTN_"(.CIAD",XWBAPVER=$G(CIA("VER")),XQY=$$GETVAR^CIANBUTL("AID0")
"RTN","CIANBACT",68,0)
 S ALOG=$$ISACTIVE^CIANBLOG,ALOG(0)=$S(ALOG:$$LOG^CIANBLOG(ALOG,1,CIA("RPC")),1:0)
"RTN","CIANBACT",69,0)
 F I=1:1:ARG D
"RTN","CIANBACT",70,0)
 .S RTN=RTN_","
"RTN","CIANBACT",71,0)
 .Q:'$D(ARG(I))
"RTN","CIANBACT",72,0)
 .S P="P"_I,RTN=RTN_"."_P
"RTN","CIANBACT",73,0)
 .S:$D(@P)=10 @P=""
"RTN","CIANBACT",74,0)
 .D:ALOG(0) ADD^CIANBLOG(ALOG,ALOG(0),P,1)
"RTN","CIANBACT",75,0)
 S RTN=RTN_")"
"RTN","CIANBACT",76,0)
 D
"RTN","CIANBACT",77,0)
 .N ALOG
"RTN","CIANBACT",78,0)
 .D @RTN
"RTN","CIANBACT",79,0)
 I ALOG(0) D
"RTN","CIANBACT",80,0)
 .N VAL,ARY
"RTN","CIANBACT",81,0)
 .S VAL=$C(13)_"Return Data:"_$C(13)
"RTN","CIANBACT",82,0)
 .D ADD^CIANBLOG(ALOG,ALOG(0),"VAL")
"RTN","CIANBACT",83,0)
 .I XWBPTYPE=1 S VAL=$G(CIAD),ARY="VAL"
"RTN","CIANBACT",84,0)
 .E  I XWBPTYPE=2 S ARY="CIAD"
"RTN","CIANBACT",85,0)
 .E  I XWBPTYPE=3 S ARY="CIAD"
"RTN","CIANBACT",86,0)
 .E  I XWBPTYPE=4 S ARY=CIAD
"RTN","CIANBACT",87,0)
 .E  I XWBPTYPE=5 S VAL=$G(@CIAD),ARY="VAL"
"RTN","CIANBACT",88,0)
 .E  I XWBPTYPE="H" S VAL=CIAD,ARY="VAL"
"RTN","CIANBACT",89,0)
 .E  Q
"RTN","CIANBACT",90,0)
 .D ADD^CIANBLOG(ALOG,ALOG(0),ARY)
"RTN","CIANBACT",91,0)
 Q
"RTN","CIANBACT",92,0)
 ; Test for error condition
"RTN","CIANBACT",93,0)
 ; TEST = If true, setup the error
"RTN","CIANBACT",94,0)
 ; ERR  = Error code
"RTN","CIANBACT",95,0)
 ; Pn   = Optional parameters (up to 3)
"RTN","CIANBACT",96,0)
ERRCHK(TEST,ERR,P1,P2,P3) ;
"RTN","CIANBACT",97,0)
 I TEST,'$G(CIAERR(0)) D
"RTN","CIANBACT",98,0)
 .D GETDLG^CIANBUTL(ERR,.CIAERR,.P1,.P2,.P3)
"RTN","CIANBACT",99,0)
 .S CIAERR(0)=ERR
"RTN","CIANBACT",100,0)
 Q:$Q +$G(CIAERR(0))
"RTN","CIANBACT",101,0)
 Q
"RTN","CIANBACT",102,0)
 ; Writes return data to TCP stream
"RTN","CIANBACT",103,0)
DATAOUT D TCPUSE^CIANBLIS
"RTN","CIANBACT",104,0)
 W $C(0)
"RTN","CIANBACT",105,0)
 I XWBPTYPE=1 W $G(CIAD),! Q
"RTN","CIANBACT",106,0)
 I XWBPTYPE=2 D OUT("CIAD",1) Q
"RTN","CIANBACT",107,0)
 I XWBPTYPE=3 D OUT("CIAD",XWBWRAP) Q
"RTN","CIANBACT",108,0)
 I XWBPTYPE=4 D OUT(CIAD,XWBWRAP) Q
"RTN","CIANBACT",109,0)
 I XWBPTYPE=5 W $G(@CIAD),! Q
"RTN","CIANBACT",110,0)
 I XWBPTYPE="H" D HFSOUT(CIAD,XWBWRAP) Q
"RTN","CIANBACT",111,0)
 Q
"RTN","CIANBACT",112,0)
 ; Write array (local or global) to TCP stream
"RTN","CIANBACT",113,0)
OUT(ARY,EOL) ;
"RTN","CIANBACT",114,0)
 N X,L,K
"RTN","CIANBACT",115,0)
 S K=$E(ARY)'="~"
"RTN","CIANBACT",116,0)
 S:'K ARY=$E(ARY,2,999)
"RTN","CIANBACT",117,0)
 Q:'$L(ARY)
"RTN","CIANBACT",118,0)
 S ARY=$NA(@ARY)
"RTN","CIANBACT",119,0)
 S X=ARY,L=$QL(ARY),EOL=$S($G(EOL):$C(13),1:"")
"RTN","CIANBACT",120,0)
 F  S X=$Q(@X) Q:'$L(X)  Q:$NA(@X,L)'=ARY  W @X,EOL,!
"RTN","CIANBACT",121,0)
 K:K @ARY
"RTN","CIANBACT",122,0)
 Q
"RTN","CIANBACT",123,0)
 ; Write contents of HFS to TCP stream
"RTN","CIANBACT",124,0)
HFSOUT(HFS,EOL) ;
"RTN","CIANBACT",125,0)
 N X
"RTN","CIANBACT",126,0)
 S EOL=$S($G(EOL):$C(13),1:"")
"RTN","CIANBACT",127,0)
 D OPEN^CIAUOS(.HFS,"R")
"RTN","CIANBACT",128,0)
 F  Q:$$READ^CIAUOS(.X,HFS)  D
"RTN","CIANBACT",129,0)
 .D TCPUSE^CIANBLIS
"RTN","CIANBACT",130,0)
 .W X,EOL,!
"RTN","CIANBACT",131,0)
 D CLOSE^CIAUOS(.HFS),DELETE^CIAUOS(HFS)
"RTN","CIANBACT",132,0)
 Q
"RTN","CIANBACT",133,0)
 ; Returns true if RPC can run in current context
"RTN","CIANBACT",134,0)
CANRUN(RPC,CTX) ;
"RTN","CIANBACT",135,0)
 Q:'$G(DUZ)!'RPC 0
"RTN","CIANBACT",136,0)
 S CTX(0)=$$OPTLKP^CIANBUTL(CTX)
"RTN","CIANBACT",137,0)
 Q:$$ERRCHK('$L(CTX(0)),2,CTX) 0
"RTN","CIANBACT",138,0)
 D:'$G(^XTMP("CIA",CIA("UID"),"C",CTX(0))) BLDCTX(CTX(0))
"RTN","CIANBACT",139,0)
 Q:$$KCHK^XUSRB("XUPROGMODE") 1
"RTN","CIANBACT",140,0)
 Q $D(^XTMP("CIA",CIA("UID"),"C",CTX(0),RPC))
"RTN","CIANBACT",141,0)
 ; Build RPC context table
"RTN","CIANBACT",142,0)
BLDCTX(OPT,CTX) ;
"RTN","CIANBACT",143,0)
 N X
"RTN","CIANBACT",144,0)
 I '$D(CTX) K ^XTMP("CIA",CIA("UID"),"C",OPT) S ^(OPT)=1,CTX=OPT
"RTN","CIANBACT",145,0)
 Q:$D(^XTMP("CIA",CIA("UID"),"C",CTX,0,OPT))  S ^(OPT)=""
"RTN","CIANBACT",146,0)
 Q:$$OPTCHK^CIANBUTL(OPT,"B")
"RTN","CIANBACT",147,0)
 M ^XTMP("CIA",CIA("UID"),"C",CTX)=^DIC(19,OPT,"RPC","B")
"RTN","CIANBACT",148,0)
 F X=0:0 S X=$O(^DIC(19,OPT,10,"B",X)) Q:'X  D BLDCTX(X,CTX)
"RTN","CIANBACT",149,0)
 K:CTX=OPT ^XTMP("CIA",CIA("UID"),"C",CTX,0)
"RTN","CIANBACT",150,0)
 Q
"RTN","CIANBACT",151,0)
 ; OS-specific job commands
"RTN","CIANBACT",152,0)
JOB1() I CIAMODE=2 D MODE2 Q 1
"RTN","CIANBACT",153,0)
 J EN^CIANBLIS(PORT,IP,1)[UCI]::15
"RTN","CIANBACT",154,0)
 Q $T
"RTN","CIANBACT",155,0)
JOB2() I CIAMODE=2 D MODE2 Q 1
"RTN","CIANBACT",156,0)
 J EN^CIANBLIS(PORT,IP,1)[UCI]:100000:15
"RTN","CIANBACT",157,0)
 Q $T
"RTN","CIANBACT",158,0)
JOB3() I $G(CIA("DBG"))!($G(CIA("VER"))<1.5) J EN^CIANBLIS(PORT,IP,1)[$P(UCI,",")]::15 Q $T
"RTN","CIANBACT",159,0)
 S $P(CIADATA,U)=1
"RTN","CIANBACT",160,0)
 D REPLY^CIANBLIS(CIADATA)
"RTN","CIANBACT",161,0)
 K CIADATA
"RTN","CIANBACT",162,0)
 J EN^CIANBLIS(CIAPORT,CIAIP,2)[$P(UCI,",")]:(:4:CIATDEV:CIATDEV):15
"RTN","CIANBACT",163,0)
 Q $T
"RTN","CIANBACT",164,0)
 ; Mode 2 support for MSM and DSM
"RTN","CIANBACT",165,0)
MODE2 D:UCI'=UCI(0) SETUCI(UCI)
"RTN","CIANBACT",166,0)
 S UCI(0)=UCI
"RTN","CIANBACT",167,0)
 I '$G(CIA("DBG")),$G(CIA("VER"))'<1.5 S $P(CIADATA,U)=1,CIAMODE=1
"RTN","CIANBACT",168,0)
 E  S CIAQUIT=1 D REPLY^CIANBLIS(),TCPCLOSE^CIANBLIS,EN^CIANBLIS(PORT,IP,1)
"RTN","CIANBACT",169,0)
 Q
"RTN","CIANBACT",170,0)
 ; Return current UCI
"RTN","CIANBACT",171,0)
GETUCI() N Y
"RTN","CIANBACT",172,0)
 D UCI^%ZOSV
"RTN","CIANBACT",173,0)
 Q Y
"RTN","CIANBACT",174,0)
 ; Change UCI
"RTN","CIANBACT",175,0)
SETUCI(X) D SWAP^%XUCI
"RTN","CIANBACT",176,0)
 Q
"RTN","CIANBACT",177,0)
 ; Get authentication method for target UCI
"RTN","CIANBACT",178,0)
AUTHMETH(UCI) ;
"RTN","CIANBACT",179,0)
 N X,PC
"RTN","CIANBACT",180,0)
 F PC=2,1 D  Q:$L(X)
"RTN","CIANBACT",181,0)
 .S X=$$GET^XPAR("ALL","CIANB AUTHENTICATION",$P(UCI,",",1,PC))
"RTN","CIANBACT",182,0)
 Q X
"RTN","CIANBRPC")
0^3^B60754770
"RTN","CIANBRPC",1,0)
CIANBRPC ;MSC/IND/DKM - MSC RPC Broker Privileged RPCs;20-Apr-2010 10:11;DKM
"RTN","CIANBRPC",2,0)
 ;;1.1;CIA NETWORK COMPONENTS;**001007,001008**;Sep 18, 2007;Build 15
"RTN","CIANBRPC",3,0)
 ;;Copyright 2000-2008, Medsphere Systems Corporation
"RTN","CIANBRPC",4,0)
 ;=================================================================
"RTN","CIANBRPC",5,0)
 ; RPC: User authentication
"RTN","CIANBRPC",6,0)
 ; AID = Application ID
"RTN","CIANBRPC",7,0)
 ; WID = Workstation ID
"RTN","CIANBRPC",8,0)
 ; SID = NT Security ID
"RTN","CIANBRPC",9,0)
 ; AVC = AV Code
"RTN","CIANBRPC",10,0)
 ; WIP = Workstation IP address
"RTN","CIANBRPC",11,0)
 ; DIV = Login division (optional)
"RTN","CIANBRPC",12,0)
 ; Returns:
"RTN","CIANBRPC",13,0)
 ;  DATA(0)=Status code^Status text
"RTN","CIANBRPC",14,0)
 ;  where Status code is one of:
"RTN","CIANBRPC",15,0)
 ;   0 = success                 (Params=UID^net name^div name^DUZ)
"RTN","CIANBRPC",16,0)
 ;   1 = success, verify expired (Params=same as success)
"RTN","CIANBRPC",17,0)
 ;   2 = logins inhibited        (Params=null)
"RTN","CIANBRPC",18,0)
 ;   3 = locked                  (Params=null)
"RTN","CIANBRPC",19,0)
 ;   4 = authentication failure  (Params=server^volume^UCI^port)
"RTN","CIANBRPC",20,0)
 ;   5 = other error             (Params=null)
"RTN","CIANBRPC",21,0)
 ;  DATA(1)=Params
"RTN","CIANBRPC",22,0)
 ;  DATA(2,n)=Greeting message
"RTN","CIANBRPC",23,0)
AUTH(DATA,AID,WID,SID,AVC,WIP,DIV) ;
"RTN","CIANBRPC",24,0)
 N XOPT,XUT,XUTEXT,XOPT,XUEON,XUEOFF,XUTT,XUDEV,XUSER,XUNOW,X
"RTN","CIANBRPC",25,0)
 K DUZ,DATA,^TMP($J),^UTILITY($J)
"RTN","CIANBRPC",26,0)
 D SET1^XUS(0)
"RTN","CIANBRPC",27,0)
 S (DUZ,XUT)=0,DUZ(0)="",XUDEV=0,DATA(0)=4,DATA(1)=""
"RTN","CIANBRPC",28,0)
 S AID(0)=$$OPTLKP^CIANBUTL(.AID),WID=$$ID(.WID),SID=$G(SID),WIP=$G(WIP)
"RTN","CIANBRPC",29,0)
 I '$L(AID(0)),$$CHK(18,5,.AID) Q
"RTN","CIANBRPC",30,0)
 S X=$$OPTMSG^CIANBUTL(AID(0))
"RTN","CIANBRPC",31,0)
 I $L(X),$$CHK(19,2,X) Q
"RTN","CIANBRPC",32,0)
 I '$L($G(AVC)) S DUZ=+$$AUTOLOG(SID),CIAXUT=0
"RTN","CIANBRPC",33,0)
 E  D
"RTN","CIANBRPC",34,0)
 .I $E(AVC,1,2)="~1" S DUZ=$$CHKASH^XUSRB4(AVC)
"RTN","CIANBRPC",35,0)
 .S:'DUZ DUZ=$$CHECKAV^XUS($$DECRYP^XUSRB1(AVC)),CIAXUT=$G(CIAXUT)+1
"RTN","CIANBRPC",36,0)
 .I 'DUZ,CIAXUT>$P(XOPT,U,2),$$CHK(-7,3) Q
"RTN","CIANBRPC",37,0)
 .I 'DUZ,$$CHK(-4,4)
"RTN","CIANBRPC",38,0)
 I DUZ D
"RTN","CIANBRPC",39,0)
 .S DATA(0)=0,XUNOW=$$NOW^XLFDT,X=$$OPTCHK^CIANBUTL(AID)
"RTN","CIANBRPC",40,0)
 .Q:$$CHK(+X,2,$P(X,U,2),$P(X,U,3),$P(X,U,4))
"RTN","CIANBRPC",41,0)
 .Q:$$CHK(-$$INHIBIT^XUSRB,2)
"RTN","CIANBRPC",42,0)
 .I XUT>$P(XOPT,U,2),$$CHK(-7,3) Q
"RTN","CIANBRPC",43,0)
 .D USER^XUS(DUZ)
"RTN","CIANBRPC",44,0)
 .Q:$$CHK(-$$UVALID^XUS(),4)
"RTN","CIANBRPC",45,0)
 .Q:$$CHK(-$$USER^XUS1A,4)
"RTN","CIANBRPC",46,0)
 .F X=0:0 S X=$O(XUTEXT(X)) Q:'X  S DATA(2,X)=$E(XUTEXT(X),2,9999)
"RTN","CIANBRPC",47,0)
 .D DUZ^XUS1A,SAVE^XUS1,LOG^XUS1,ABT^XQ12
"RTN","CIANBRPC",48,0)
 .I $$VCVALID^XUSRB,$$CHK(-12,1)
"RTN","CIANBRPC",49,0)
 .I $G(CIA("UID")) D
"RTN","CIANBRPC",50,0)
 ..N UID
"RTN","CIANBRPC",51,0)
 ..S UID=CIA("UID"),CIA("UID")=0
"RTN","CIANBRPC",52,0)
 ..I '$D(^XTMP("CIA",UID)),$$CHK(25,5,UID) Q
"RTN","CIANBRPC",53,0)
 ..I $$SESSION^CIANBUTL(UID,"DUZ")'=DUZ,$$CHK(27,4,UID) Q
"RTN","CIANBRPC",54,0)
 ..D:$$ISACTIVE^CIANBUTL(UID) FORCEEX(CIAPORT_":"_$$GETVAR^CIANBUTL("JOB"))
"RTN","CIANBRPC",55,0)
 ..I $$ISACTIVE^CIANBUTL(UID,1,60),$$CHK(26,4,UID) Q
"RTN","CIANBRPC",56,0)
 ..S CIA("UID")=UID
"RTN","CIANBRPC",57,0)
 ..D RESVAR^CIANBUTL,SETVAR^CIANBUTL("JOB",$J)
"RTN","CIANBRPC",58,0)
 ..D BRDCAST^CIANBEVT("LOGIN",$$SESSION^CIANBUTL)
"RTN","CIANBRPC",59,0)
 .E  D
"RTN","CIANBRPC",60,0)
 ..S CIA("UID")=$$UID^CIANBUTL
"RTN","CIANBRPC",61,0)
 ..D:$G(DIV) DIVSET(,DIV)
"RTN","CIANBRPC",62,0)
 ..D RESET(1)
"RTN","CIANBRPC",63,0)
 .S DATA(1)=CIA("UID")_U_$G(^XMB("NETNAME"))_U_$$GET1^DIQ(4,DUZ(2),".01")_U_DUZ
"RTN","CIANBRPC",64,0)
 .S:AID(0) ^XUTL("XQ",$J,1)=AID(0)_U_$G(^DIC(19,AID(0),0)),^("T")=1
"RTN","CIANBRPC",65,0)
 .D AUTOSET(SID),STSAVE^CIANBLIS(1)
"RTN","CIANBRPC",66,0)
 I +DATA(0)=4 D
"RTN","CIANBRPC",67,0)
 .S DATA(1)=$P(XUENV,U,3)_U_$P(XUVOL,U)_U_XUCI_U_+CIAPORT
"RTN","CIANBRPC",68,0)
 .D INTRO^XUS1A("DATA(2)")
"RTN","CIANBRPC",69,0)
 Q
"RTN","CIANBRPC",70,0)
 ; Force exit disconnected broker session
"RTN","CIANBRPC",71,0)
FORCEEX(CIAPORT) ;
"RTN","CIANBRPC",72,0)
 S @$$LOCKNODE^CIANBLIS=-1
"RTN","CIANBRPC",73,0)
 Q
"RTN","CIANBRPC",74,0)
 ; Transform ID values
"RTN","CIANBRPC",75,0)
ID(ID) Q $E($TR($G(ID),U,"~"),1,40)
"RTN","CIANBRPC",76,0)
 ; RPC: Change verify code
"RTN","CIANBRPC",77,0)
CVC(DATA,OLD,NEW) ;
"RTN","CIANBRPC",78,0)
 S DATA=$$BRCVC^XUS2($$DECRYP^XUSRB1(OLD),$$DECRYP^XUSRB1(NEW))
"RTN","CIANBRPC",79,0)
 S:'DATA DATA="0^Your verify code has been changed."
"RTN","CIANBRPC",80,0)
 Q
"RTN","CIANBRPC",81,0)
 ; RPC: Get division list
"RTN","CIANBRPC",82,0)
DIVGET(DATA) ;
"RTN","CIANBRPC",83,0)
 N X,P,G
"RTN","CIANBRPC",84,0)
 S X=0,G=$S(DUZ:$NA(^VA(200,DUZ,2)),1:$NA(^DG(40.8,"AD"))),P=0
"RTN","CIANBRPC",85,0)
 F  S X=$O(@G@(X)) Q:'X  S:DUZ P=$P(^(X,0),U,2) D
"RTN","CIANBRPC",86,0)
 .N X0,X99
"RTN","CIANBRPC",87,0)
 .S X0=$G(^DIC(4,X,0)),X99=$G(^(99))
"RTN","CIANBRPC",88,0)
 .S DATA(X)=X_U_$P(X0,U)_U_$P(X99,U)_U_$P(X0,U,5)
"RTN","CIANBRPC",89,0)
 .S:P DATA(0)=X
"RTN","CIANBRPC",90,0)
 S:'$D(DATA(0)) DATA(0)=+$O(DATA(0))
"RTN","CIANBRPC",91,0)
 I 'DATA(0),$G(DUZ(2)) S DATA(0)=DUZ(2),DATA(DUZ(2))=DUZ(2)_U_$$NS^XUAF4(DUZ(2))
"RTN","CIANBRPC",92,0)
 D:DATA(0) DIVSET(,DATA(0))
"RTN","CIANBRPC",93,0)
 Q
"RTN","CIANBRPC",94,0)
 ; RPC: Set division
"RTN","CIANBRPC",95,0)
DIVSET(DATA,DIV) ;
"RTN","CIANBRPC",96,0)
 S DUZ(2)=+DIV,DATA=1
"RTN","CIANBRPC",97,0)
 D SETVAR^CIANBUTL("DUZ2",DUZ(2))
"RTN","CIANBRPC",98,0)
 D SETVAR^CIANBUTL("DUZ(2)",DUZ(2),-1)
"RTN","CIANBRPC",99,0)
 Q
"RTN","CIANBRPC",100,0)
 ; RPC: Get dialog text
"RTN","CIANBRPC",101,0)
DIALOG(DATA,DLG,P1,P2,P3) ;
"RTN","CIANBRPC",102,0)
 D GETDLG^CIANBUTL(DLG,.DATA,.P1,.P2,.P3)
"RTN","CIANBRPC",103,0)
 Q
"RTN","CIANBRPC",104,0)
 ; RPC: Reset session
"RTN","CIANBRPC",105,0)
RESET(LOGIN) ;
"RTN","CIANBRPC",106,0)
 Q:'$G(CIA("UID"))
"RTN","CIANBRPC",107,0)
 D STOPALL^CIANBASY,UNSUBALL^CIANBEVT
"RTN","CIANBRPC",108,0)
 S LOGIN=+$G(LOGIN)
"RTN","CIANBRPC",109,0)
 N DUZ2
"RTN","CIANBRPC",110,0)
 S DUZ2=$$GETVAR^CIANBUTL("DUZ2")
"RTN","CIANBRPC",111,0)
 I 'LOGIN D
"RTN","CIANBRPC",112,0)
 .D CLOSE^CIANBLOG($$GETVAR^CIANBUTL("ALOG"_$S(DUZ2:":"_DUZ2,1:"")))
"RTN","CIANBRPC",113,0)
 .S IO("IP")=$$GETVAR^CIANBUTL("WIP")
"RTN","CIANBRPC",114,0)
 .D BRDCAST^CIANBEVT("LOGOUT",$$SESSION^CIANBUTL)
"RTN","CIANBRPC",115,0)
 .K ^XTMP("CIA",CIA("UID"))
"RTN","CIANBRPC",116,0)
 .L -^XTMP("CIA",CIA("UID"),0)
"RTN","CIANBRPC",117,0)
 .D BYE^XUSCLEAN
"RTN","CIANBRPC",118,0)
 E  D
"RTN","CIANBRPC",119,0)
 .N ENV,X,Y,V
"RTN","CIANBRPC",120,0)
 .K ^XTMP("CIA",CIA("UID"))
"RTN","CIANBRPC",121,0)
 .F ENV=0:1 S X=$P($T(ENVDATA+ENV),";;",2) Q:'$L(X)  D
"RTN","CIANBRPC",122,0)
 ..S V=$P(X,";",2),@("Y="_V)
"RTN","CIANBRPC",123,0)
 ..D SETVAR^CIANBUTL($P(X,";"),Y)
"RTN","CIANBRPC",124,0)
 ..D:$P(X,";",3) SETVAR^CIANBUTL(V,Y,-1)
"RTN","CIANBRPC",125,0)
 .D BRDCAST^CIANBEVT("LOGIN",$$SESSION^CIANBUTL)
"RTN","CIANBRPC",126,0)
 .S IO("IP")=$$GETVAR^CIANBUTL("WIP")
"RTN","CIANBRPC",127,0)
 .I $$ISACTIVE^CIANBLOG
"RTN","CIANBRPC",128,0)
 .D LOG^XUS1  ;creates handle with client agent
"RTN","CIANBRPC",129,0)
 Q
"RTN","CIANBRPC",130,0)
 ; Environment data to save
"RTN","CIANBRPC",131,0)
 ;;Name;Value;Local
"RTN","CIANBRPC",132,0)
ENVDATA ;;DUZ;DUZ
"RTN","CIANBRPC",133,0)
 ;;DUZ0;DUZ(0);1
"RTN","CIANBRPC",134,0)
 ;;DUZ2;DUZ(2);1
"RTN","CIANBRPC",135,0)
 ;;USER;$P($G(^VA(200,DUZ,0)),U)
"RTN","CIANBRPC",136,0)
 ;;RDEV;$$RESDEV^CIANBUTL
"RTN","CIANBRPC",137,0)
 ;;LDT;$H
"RTN","CIANBRPC",138,0)
 ;;JOB;$J
"RTN","CIANBRPC",139,0)
 ;;AID;AID
"RTN","CIANBRPC",140,0)
 ;;AID0;AID(0)
"RTN","CIANBRPC",141,0)
 ;;WID;WID
"RTN","CIANBRPC",142,0)
 ;;WIP;WIP
"RTN","CIANBRPC",143,0)
 ;;UID;CIA("UID")
"RTN","CIANBRPC",144,0)
 ;;
"RTN","CIANBRPC",145,0)
 ; Check error code
"RTN","CIANBRPC",146,0)
CHK(ERR,RTN,P1,P2,P3) ;
"RTN","CIANBRPC",147,0)
 I ERR S DATA(0)=RTN_U_$S(ERR<0:$$TXT^XUS3(-ERR),1:$$GETDLG^CIANBUTL(ERR,,.P1,.P2,.P3)) S:RTN>1 DUZ=0
"RTN","CIANBRPC",148,0)
 Q ERR
"RTN","CIANBRPC",149,0)
 ; Attempt autoauthenticate using SID
"RTN","CIANBRPC",150,0)
 ; Returns DUZ if SID has been authenticated, 0 if prohibited from
"RTN","CIANBRPC",151,0)
 ; being authenticated, or null if never been authenticated.
"RTN","CIANBRPC",152,0)
AUTOLOG(SID) ;
"RTN","CIANBRPC",153,0)
 S SID=$S($L($G(SID))<3:"",1:$$DECRYP^XUSRB1(SID))
"RTN","CIANBRPC",154,0)
 Q:$E(SID,1,9)'="S-1-5-21-" 0
"RTN","CIANBRPC",155,0)
 S SID=$E(SID,10,999)
"RTN","CIANBRPC",156,0)
 Q:SID<1000 0
"RTN","CIANBRPC",157,0)
 N X
"RTN","CIANBRPC",158,0)
 S X=$$FIND1^DIC(19941.2,"","QX",SID)
"RTN","CIANBRPC",159,0)
 Q $S(X:+$P($G(^CIANB(19941.2,X,0)),U,2),1:"")
"RTN","CIANBRPC",160,0)
 ; Cache NT authentication information
"RTN","CIANBRPC",161,0)
AUTOSET(SID) ;
"RTN","CIANBRPC",162,0)
 Q:$$AUTOLOG(.SID)'=""
"RTN","CIANBRPC",163,0)
 N FLD
"RTN","CIANBRPC",164,0)
 S FLD(19941.2,"+1,",.01)=SID
"RTN","CIANBRPC",165,0)
 S FLD(19941.2,"+1,",1)=DUZ
"RTN","CIANBRPC",166,0)
 S FLD(19941.2,"+1,",2)=$$NOW^XLFDT
"RTN","CIANBRPC",167,0)
 D UPDATE^DIE("","FLD")
"RTN","CIANBRPC",168,0)
 Q
"RTN","CIANBRPC",169,0)
 ; RPC: Get list of active RPCs
"RTN","CIANBRPC",170,0)
GETRPCS(DATA) ;
"RTN","CIANBRPC",171,0)
 N X
"RTN","CIANBRPC",172,0)
 D LIST^DIC(8994,,".01","Q",,,,,"I ""03""[$P(^(0),U,6)",,.DATA)
"RTN","CIANBRPC",173,0)
 S X=""
"RTN","CIANBRPC",174,0)
 F  S X=$O(@DATA@(X)) Q:'$L(X)  K:X'="ID" @DATA@(X)
"RTN","CIANBRPC",175,0)
 Q
"RTN","CIANBRPC",176,0)
 ; RPC: Can RPC be executed in current context
"RTN","CIANBRPC",177,0)
CANRUN(DATA,RPC) ;
"RTN","CIANBRPC",178,0)
 S DATA=$$CANRUN^CIANBACT($$FIND1^DIC(8994,,"QX",RPC),CIA("CTX"))
"RTN","CIANBRPC",179,0)
 Q
"RTN","CIANBRPC",180,0)
 ; RPC: Retrieve list of active sessions
"RTN","CIANBRPC",181,0)
GETSESSN(DATA,VAR,AID) ;
"RTN","CIANBRPC",182,0)
 N X,Z,C
"RTN","CIANBRPC",183,0)
 S DATA=$$TMPGBL
"RTN","CIANBRPC",184,0)
 F C=1:1 Q:'$$NXTUID^CIANBUTL(.X,,.AID)  S @DATA@(C)=$$SESSION^CIANBUTL(X,.VAR)
"RTN","CIANBRPC",185,0)
 Q
"RTN","CIANBRPC",186,0)
 ; RPC: Get stored variable(s)
"RTN","CIANBRPC",187,0)
GETVAR(DATA,LIST,NMSP) ;
"RTN","CIANBRPC",188,0)
 N CNT
"RTN","CIANBRPC",189,0)
 S:$L($G(LIST)) LIST(-99)=LIST
"RTN","CIANBRPC",190,0)
 S LIST="",CNT=0
"RTN","CIANBRPC",191,0)
 S:0[$G(NMSP) NMSP="@"
"RTN","CIANBRPC",192,0)
 F  S LIST=$O(LIST(LIST)) Q:'$L(LIST)  D
"RTN","CIANBRPC",193,0)
 .S CNT=CNT+1,DATA(CNT)=LIST(LIST)_"="_$$GETVAR^CIANBUTL(LIST(LIST),,NMSP)
"RTN","CIANBRPC",194,0)
 Q
"RTN","CIANBRPC",195,0)
 ; RPC: Set stored variable(s)
"RTN","CIANBRPC",196,0)
SETVAR(DATA,LIST,NMSP,RESET) ;
"RTN","CIANBRPC",197,0)
 S:$L($G(LIST)) LIST(-99)=LIST
"RTN","CIANBRPC",198,0)
 S LIST="",DATA=0
"RTN","CIANBRPC",199,0)
 S:0[$G(NMSP) NMSP="@"
"RTN","CIANBRPC",200,0)
 D:$G(RESET) CLRVAR^CIANBUTL(NMSP)
"RTN","CIANBRPC",201,0)
 F  S LIST=$O(LIST(LIST)) Q:'$L(LIST)  D
"RTN","CIANBRPC",202,0)
 .S DATA=DATA+1
"RTN","CIANBRPC",203,0)
 .D SETVAR^CIANBUTL($P(LIST(LIST),"="),$P(LIST(LIST),"=",2,9999),NMSP)
"RTN","CIANBRPC",204,0)
 Q
"RTN","CIANBRPC",205,0)
 ; RPC: Get requested session info
"RTN","CIANBRPC",206,0)
 ; TYPE = 0=subscriptions, 1=local vars, 2=session vars, 3=locks, 4=pending async RPCs
"RTN","CIANBRPC",207,0)
 ; UID  = Session ID (defaults to current session)
"RTN","CIANBRPC",208,0)
GETINFO(DATA,TYPE,UID) ;
"RTN","CIANBRPC",209,0)
 S UID=$G(UID,$G(CIA("UID")))
"RTN","CIANBRPC",210,0)
 I TYPE=0 D  Q
"RTN","CIANBRPC",211,0)
 .N EV,CN
"RTN","CIANBRPC",212,0)
 .S EV="",CN=0
"RTN","CIANBRPC",213,0)
 .F  S EV=$O(^XTMP("CIA",UID,"S",EV)) Q:'$L(EV)  D
"RTN","CIANBRPC",214,0)
 ..S CN=CN+1,@DATA@(CN)=EV
"RTN","CIANBRPC",215,0)
 I TYPE=1 D  Q
"RTN","CIANBRPC",216,0)
 .D CAPTURE^CIAUHFS("ZW  N X F X=""$ET"",""$EC"",""$ES"",""$J"",""$ZE"",""$ZT"" W !,X,""="",@X",DATA,99999)
"RTN","CIANBRPC",217,0)
 I TYPE=2 D  Q
"RTN","CIANBRPC",218,0)
 .N NS,VN,VL,CN
"RTN","CIANBRPC",219,0)
 .S NS="",CN=0
"RTN","CIANBRPC",220,0)
 .F  S NS=$O(^XTMP("CIA",UID,"V",NS)),VN="" Q:'$L(NS)  D
"RTN","CIANBRPC",221,0)
 ..F  S VN=$O(^XTMP("CIA",UID,"V",NS,VN)) Q:'$L(VN)  S VL=$G(^(VN)) D
"RTN","CIANBRPC",222,0)
 ...S CN=CN+1,@DATA@(CN)=$S(NS=0:"<default>",NS=-1:"<mapped>",1:NS)_U_VN_U_VL
"RTN","CIANBRPC",223,0)
 I TYPE=3 D  Q
"RTN","CIANBRPC",224,0)
 .N GBL,CN,VL
"RTN","CIANBRPC",225,0)
 .S GBL="",CN=0
"RTN","CIANBRPC",226,0)
 .F  S GBL=$O(^XTMP("CIA",UID,"L",GBL)) Q:'$L(GBL)  S VL=$G(^(GBL)) D
"RTN","CIANBRPC",227,0)
 ..S CN=CN+1,@DATA@(CN)=$TR(GBL,U,"~")_U_VL
"RTN","CIANBRPC",228,0)
 I TYPE=4 D  Q
"RTN","CIANBRPC",229,0)
 .N TSK,CN
"RTN","CIANBRPC",230,0)
 .S (TSK,CN)=0
"RTN","CIANBRPC",231,0)
 .F  S TSK=$O(^XTMP("CIA",UID,"T",TSK)) Q:'TSK  D
"RTN","CIANBRPC",232,0)
 ..S CN=CN+1,@DATA@(CN)=TSK_U_$G(^%ZTSK(TSK,.03),"Unknown")
"RTN","CIANBRPC",233,0)
 S @DATA@(1)="Unknown request type: "_TYPE
"RTN","CIANBRPC",234,0)
 Q
"RTN","CIANBRPC",235,0)
 ; Lock/unlock global reference
"RTN","CIANBRPC",236,0)
 ; GBL  = Global reference
"RTN","CIANBRPC",237,0)
 ; OPR  = Operation to perform:
"RTN","CIANBRPC",238,0)
 ;        >=0: Value is timeout for lock operation.  Returns success.
"RTN","CIANBRPC",239,0)
 ;         <0: Returns # of active locks for node.
"RTN","CIANBRPC",240,0)
 ;    missing: Performs unlock operation.  Returns success.
"RTN","CIANBRPC",241,0)
 ; DATA = Returns status according to value of OPR.
"RTN","CIANBRPC",242,0)
LOCK(DATA,GBL,OPR) ;
"RTN","CIANBRPC",243,0)
 N LCK
"RTN","CIANBRPC",244,0)
 S LCK=$D(OPR),OPR=+$G(OPR),GBL=$NA(@GBL)
"RTN","CIANBRPC",245,0)
 I OPR<0 S DATA=$$LOCKCNT(GBL)
"RTN","CIANBRPC",246,0)
 E  I LCK D
"RTN","CIANBRPC",247,0)
 .L +@GBL:OPR
"RTN","CIANBRPC",248,0)
 .S DATA=$T
"RTN","CIANBRPC",249,0)
 .I DATA,$$LOCKCNT(GBL,1)
"RTN","CIANBRPC",250,0)
 E  D
"RTN","CIANBRPC",251,0)
 .S DATA=''$$LOCKCNT(GBL,-1)
"RTN","CIANBRPC",252,0)
 .L:DATA -@GBL
"RTN","CIANBRPC",253,0)
 Q
"RTN","CIANBRPC",254,0)
 ; RPC: Restore locks (after reconnect)
"RTN","CIANBRPC",255,0)
 ; Data returns list of locks that could not be restored.
"RTN","CIANBRPC",256,0)
LOCKRES(DATA) ;
"RTN","CIANBRPC",257,0)
 N GBL,CNT,X
"RTN","CIANBRPC",258,0)
 S GBL="",X=0
"RTN","CIANBRPC",259,0)
 F  S GBL=$O(^XTMP("CIA",CIA("UID"),"L",GBL)) Q:'$L(GBL)  S CNT=+$G(^(GBL))  D
"RTN","CIANBRPC",260,0)
 .F CNT=CNT:-1:1 L +@GBL:1 E  D  Q
"RTN","CIANBRPC",261,0)
 ..S X=X+1,@DATA@(X)=GBL
"RTN","CIANBRPC",262,0)
 ..K ^XTMP("CIA",CIA("UID"),"L",GBL)
"RTN","CIANBRPC",263,0)
 Q
"RTN","CIANBRPC",264,0)
 ; Return lock count.  Optionally increment/decrement afterwards.
"RTN","CIANBRPC",265,0)
 ; Note use of naked reference.
"RTN","CIANBRPC",266,0)
LOCKCNT(GBL,INC) ;
"RTN","CIANBRPC",267,0)
 N X,Y
"RTN","CIANBRPC",268,0)
 S X=+$G(^XTMP("CIA",CIA("UID"),"L",GBL)),Y=X+$G(INC)  ; Sets naked reference
"RTN","CIANBRPC",269,0)
 I Y>0 S ^(GBL)=Y
"RTN","CIANBRPC",270,0)
 E  K ^(GBL)
"RTN","CIANBRPC",271,0)
 Q X
"RTN","CIANBRPC",272,0)
 ; Get temp global reference
"RTN","CIANBRPC",273,0)
TMPGBL(X) ;
"RTN","CIANBRPC",274,0)
 K ^TMP("CIANBTMP"_$G(X),$J) Q $NA(^($J))
"RTN","CIAOINIT")
0^^B6496050
"RTN","CIAOINIT",1,0)
CIAOINIT ;MSC/IND/DKM - VueCentric Component KIDS support ;26-May-2006 18:19;DKM
"RTN","CIAOINIT",2,0)
 ;;1.1;VUECENTRIC COMPONENTS;;Oct 06, 2004;Build 15
"RTN","CIAOINIT",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAOINIT",4,0)
 ;=================================================================
"RTN","CIAOINIT",5,0)
 ; Environment check
"RTN","CIAOINIT",6,0)
EC I $G(XPDENV)=1 D
"RTN","CIAOINIT",7,0)
 .N X
"RTN","CIAOINIT",8,0)
 .F X="XPI1","XPO1","XPZ1" S XPDDIQ(X)=0
"RTN","CIAOINIT",9,0)
 .S XPDNOQUE=1
"RTN","CIAOINIT",10,0)
 X $G(@XPDGREF@("EC"))
"RTN","CIAOINIT",11,0)
 D OBJCHK^CIAVINIT
"RTN","CIAOINIT",12,0)
 Q
"RTN","CIAOINIT",13,0)
 ; Generic preinit
"RTN","CIAOINIT",14,0)
PRE D OBJINST^CIAVINIT,INITIAL^CIAVINIT,RENPRGID^CIAVINIT,SAVEREG^CIAVINIT
"RTN","CIAOINIT",15,0)
 Q
"RTN","CIAOINIT",16,0)
 ; Generic postinit
"RTN","CIAOINIT",17,0)
POST D HOME^%ZIS
"RTN","CIAOINIT",18,0)
 X ^%ZOSF("EON"),^%ZOSF("TRMOFF")
"RTN","CIAOINIT",19,0)
 D RESPTR^CIAVINIT,RESTREG^CIAVINIT,REGNMSP,DEFPAR^CIAVINIT,FINAL^CIAVINIT
"RTN","CIAOINIT",20,0)
 Q
"RTN","CIAOINIT",21,0)
 ; Register namespaces
"RTN","CIAOINIT",22,0)
REGNMSP N X
"RTN","CIAOINIT",23,0)
 F X="CIAV","CIAO","BEHO" D REGNMSP^CIAURPC(X,"CIAV VUECENTRIC")
"RTN","CIAOINIT",24,0)
 Q
"RTN","CIAOINIT",25,0)
 ; Check for presence of package or patch
"RTN","CIAOINIT",26,0)
 ;     NAME = Patch or package name and version
"RTN","CIAOINIT",27,0)
 ;   ACTION = See CHKCMN entry point
"RTN","CIAOINIT",28,0)
 ;      MSG = Message to display if check fails
"RTN","CIAOINIT",29,0)
CHKDEP(NAME,ACTION,MSG) ; EP
"RTN","CIAOINIT",30,0)
 N OK,PKG,VER,NUM
"RTN","CIAOINIT",31,0)
 S OK=$$BUILD^XPDUTL(NAME)
"RTN","CIAOINIT",32,0)
 Q:OK
"RTN","CIAOINIT",33,0)
 I NAME?1.E1"*"1.E1"*"1.N D
"RTN","CIAOINIT",34,0)
 .S PKG=+$O(^DIC(9.4,"C",$P(NAME,"*"),0)),VER=$P(NAME,"*",2),NUM=$P(NAME,"*",3)
"RTN","CIAOINIT",35,0)
 .S VER=+$O(^DIC(9.4,PKG,22,"B",VER,0)),OK=+$O(^DIC(9.4,PKG,22,VER,"PAH","B",NUM,0))
"RTN","CIAOINIT",36,0)
 .S:'OK MSG=$G(MSG,"Patch "_NAME_" is required before installation can continue.")
"RTN","CIAOINIT",37,0)
 E  D
"RTN","CIAOINIT",38,0)
 .S NUM=$L(NAME," "),VER=$P(NAME," ",NUM),PKG=$P(NAME," ",1,NUM-1)
"RTN","CIAOINIT",39,0)
 .S PKG=$S('$L(PKG):0,1:+$O(^DIC(9.4,"B",PKG,0)))
"RTN","CIAOINIT",40,0)
 .S OK=+$O(^DIC(9.4,PKG,22,"B",VER,0))
"RTN","CIAOINIT",41,0)
 .S:'OK MSG=$G(MSG,"Package "_NAME_" is required before installation can continue.")
"RTN","CIAOINIT",42,0)
 D:'OK CHKCMN(.ACTION,.MSG)
"RTN","CIAOINIT",43,0)
 Q
"RTN","CIAOINIT",44,0)
 ; Check for completed installation
"RTN","CIAOINIT",45,0)
 ;     NAME = Build name
"RTN","CIAOINIT",46,0)
 ;   ACTION = See CHKCMN entry point
"RTN","CIAOINIT",47,0)
 ;      MSG = Message to display if check fails
"RTN","CIAOINIT",48,0)
CHKINS(NAME,ACTION,MSG) ; EP
"RTN","CIAOINIT",49,0)
 N IEN
"RTN","CIAOINIT",50,0)
 S IEN=""
"RTN","CIAOINIT",51,0)
 F  S IEN=$O(^XPD(9.7,"B",NAME,IEN),-1) Q:'IEN  Q:$$GET1^DIQ(9.7,IEN,.02,"I")=3
"RTN","CIAOINIT",52,0)
 D:'IEN CHKCMN(.ACTION,$G(MSG,"Build "_NAME_" must be installed before installation can continue."))
"RTN","CIAOINIT",53,0)
 Q
"RTN","CIAOINIT",54,0)
 ; Display message and set appropriate flags
"RTN","CIAOINIT",55,0)
 ;   ACTION = Action code if check fails
"RTN","CIAOINIT",56,0)
 ;       -2: Don't install build, leave in cache
"RTN","CIAOINIT",57,0)
 ;       -1: Don't install build, remove from cache
"RTN","CIAOINIT",58,0)
 ;        0: Display warning only
"RTN","CIAOINIT",59,0)
 ;        1: Don't install distribution, remove from cache
"RTN","CIAOINIT",60,0)
 ;        2: Don't install distribution, leave in cache (default)
"RTN","CIAOINIT",61,0)
 ;      MSG = Message to display (optional)
"RTN","CIAOINIT",62,0)
CHKCMN(ACTION,MSG) ;
"RTN","CIAOINIT",63,0)
 D:$L($G(MSG)) BMES^XPDUTL(MSG)
"RTN","CIAOINIT",64,0)
 S ACTION=+$G(ACTION,2)
"RTN","CIAOINIT",65,0)
 I ACTION>0 S:$G(XPDABORT)<ACTION XPDABORT=ACTION K XPDQUIT
"RTN","CIAOINIT",66,0)
 E  I ACTION<0 S:'$G(XPDABORT) XPDQUIT=-ACTION
"RTN","CIAOINIT",67,0)
 Q
"RTN","CIAVCXUS")
0^4^B4534977
"RTN","CIAVCXUS",1,0)
CIAVCXUS ;MSC/IND/DKM - User Context Support ;28-Apr-2010 17:12;DKM
"RTN","CIAVCXUS",2,0)
 ;;1.1V2;VUECENTRIC FRAMEWORK;**1**;Sep 18, 2007;Build 15
"RTN","CIAVCXUS",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAVCXUS",4,0)
 ;=================================================================
"RTN","CIAVCXUS",5,0)
 ; Returns true if user has key
"RTN","CIAVCXUS",6,0)
 ; KEY = Security key (or parameter if begins with "@")
"RTN","CIAVCXUS",7,0)
 ; USR = IEN of user to check (defaults to current user)
"RTN","CIAVCXUS",8,0)
HASKEY(KEY,USR) ;EP
"RTN","CIAVCXUS",9,0)
 Q:'$L(KEY) 1
"RTN","CIAVCXUS",10,0)
 S USR=$G(USR,DUZ)
"RTN","CIAVCXUS",11,0)
 I $E(KEY)="@" D GETPAR^CIAVMRPC(.KEY,$E(KEY,2,999),,,,USR) Q ''KEY
"RTN","CIAVCXUS",12,0)
 Q ''$D(^XUSEC(KEY,+USR))
"RTN","CIAVCXUS",13,0)
 ; RPC: Check for multiple keys
"RTN","CIAVCXUS",14,0)
HASKEYS(DATA,KEYS) ;EP
"RTN","CIAVCXUS",15,0)
 N PC
"RTN","CIAVCXUS",16,0)
 S DATA=""
"RTN","CIAVCXUS",17,0)
 F PC=1:1:$L(KEYS,U) S $P(DATA,U,PC)=$$HASKEY($P(KEYS,U,PC))
"RTN","CIAVCXUS",18,0)
 Q
"RTN","CIAVCXUS",19,0)
 ; RPC: Retrieve user information for specified USER
"RTN","CIAVCXUS",20,0)
 ;  1    2            3              4           5
"RTN","CIAVCXUS",21,0)
 ; DUZ^NAME^PTMOUT;STMOUT;CNTDN^COMPOSE MODE^DESIGN MODE
"RTN","CIAVCXUS",22,0)
VIMINFO(DATA,USER) ;
"RTN","CIAVCXUS",23,0)
 N X
"RTN","CIAVCXUS",24,0)
 I $G(USER) N DUZ S DUZ=USER
"RTN","CIAVCXUS",25,0)
 S DATA=$P($G(^VA(200,DUZ,0)),U)
"RTN","CIAVCXUS",26,0)
 Q:'$L(DATA)
"RTN","CIAVCXUS",27,0)
 S DATA=DUZ_U_DATA_U_$$GET^XPAR("ALL","CIAVM PRIMARY TIMEOUT")
"RTN","CIAVCXUS",28,0)
 S X=$$GET^XPAR("ALL","CIAVM SECONDARY TIMEOUT")
"RTN","CIAVCXUS",29,0)
 S:'X X=$G(DTIME,300)
"RTN","CIAVCXUS",30,0)
 S DATA=DATA_";"_X_";"_$$GET^XPAR("ALL","CIAVM COUNTDOWN INTERVAL")
"RTN","CIAVCXUS",31,0)
 S DATA=DATA_U_$$HASKEY("CIAV COMPOSE")_U_$$HASKEY("CIAV DESIGN")
"RTN","CIAVCXUS",32,0)
 Q
"RTN","CIAVCXUS",33,0)
 ; RPC: Returns true if password is valid
"RTN","CIAVCXUS",34,0)
VALIDPSW(DATA,PSW,USER) ;EP
"RTN","CIAVCXUS",35,0)
 S PSW=$$DECRYP^XUSRB1(PSW),USER=+$G(USER,DUZ)
"RTN","CIAVCXUS",36,0)
 S:'$$GET^XPAR("SYS","XU VC CASE SENSITIVE") PSW=$$UP^XLFSTR(PSW)
"RTN","CIAVCXUS",37,0)
 S DATA=$$EN^XUSHSH(PSW)=$P($G(^VA(200,USER,.1)),U,2)
"RTN","CIAVCXUS",38,0)
 Q
"RTN","CIAVCXUS",39,0)
 ; RPC: Returns roles and privileges
"RTN","CIAVCXUS",40,0)
GETPRIV(DATA,USER) ;EP
"RTN","CIAVCXUS",41,0)
 N TMP,LP,IDX,PAR
"RTN","CIAVCXUS",42,0)
 S USER=+$GET(USER,DUZ)
"RTN","CIAVCXUS",43,0)
 D WHATIS^USRLM(USER,"TMP")
"RTN","CIAVCXUS",44,0)
 S LP="",IDX=1
"RTN","CIAVCXUS",45,0)
 F  S LP=$O(TMP(LP)) Q:'$L(LP)  D
"RTN","CIAVCXUS",46,0)
 .S DATA(IDX)="ROLE_"_$P(TMP(LP),U,3),IDX=IDX+1
"RTN","CIAVCXUS",47,0)
 S LP=""
"RTN","CIAVCXUS",48,0)
 F  S LP=$O(^XUSEC(LP)) Q:'$L(LP)  D
"RTN","CIAVCXUS",49,0)
 .S:$$HASKEY(LP,USER) DATA(IDX)="PRIV_"_LP,IDX=IDX+1
"RTN","CIAVCXUS",50,0)
 S LP=""
"RTN","CIAVCXUS",51,0)
 F  S LP=$O(^XTV(8989.51,"D","XUSEC",LP)) Q:'LP  D
"RTN","CIAVCXUS",52,0)
 .S PAR=$P($G(^XTV(8989.51,LP,0)),U)
"RTN","CIAVCXUS",53,0)
 .I $L(PAR),$$HASKEY("@"_PAR,USER) S DATA(IDX)="PARM_"_PAR,IDX=IDX+1
"RTN","CIAVCXUS",54,0)
 Q
"RTN","CIAVMRPC")
0^5^B20575218
"RTN","CIAVMRPC",1,0)
CIAVMRPC ;MSC/IND/DKM - Miscellaneous RPC calls ;09-May-2010 16:08;DKM
"RTN","CIAVMRPC",2,0)
 ;;1.1V2;VUECENTRIC FRAMEWORK;**1**;Mar 20, 2007;Build 15
"RTN","CIAVMRPC",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAVMRPC",4,0)
 ;=================================================================
"RTN","CIAVMRPC",5,0)
 ; RPC: Initialize a session
"RTN","CIAVMRPC",6,0)
INIT(DATA,CIAVER) ;
"RTN","CIAVMRPC",7,0)
 N PAR,MINVER,X
"RTN","CIAVMRPC",8,0)
 S MINVER="1.4"
"RTN","CIAVMRPC",9,0)
 I $$VERCMP(CIAVER,MINVER,$L(MINVER,"."))<0 S DATA(0)="-2^Client version ("_CIAVER_") is not compatible with server version ("_MINVER_")." Q
"RTN","CIAVMRPC",10,0)
 S DATA(0)=0
"RTN","CIAVMRPC",11,0)
 F X=0:1 S PAR=$P($T(INITPAR+X),";;",2) Q:'$L(PAR)  D
"RTN","CIAVMRPC",12,0)
 .S DATA(X+1)=$$PARAM($P(PAR,U),$P(PAR,U,2),$P(PAR,U,3))
"RTN","CIAVMRPC",13,0)
 Q
"RTN","CIAVMRPC",14,0)
 ; Initialization parameters to return to caller (do not change order)
"RTN","CIAVMRPC",15,0)
 ; Format is param name^low limit^high limit
"RTN","CIAVMRPC",16,0)
INITPAR ;;CIAVM DISABLE CCOW^0^1
"RTN","CIAVMRPC",17,0)
 ;;
"RTN","CIAVMRPC",18,0)
 ; Retrieve a package parameter value
"RTN","CIAVMRPC",19,0)
PARAM(PAR,MIN,MAX) ;
"RTN","CIAVMRPC",20,0)
 S VAL=+$$GET^XPAR("ALL",PAR)
"RTN","CIAVMRPC",21,0)
 S:VAL<MIN VAL=MIN
"RTN","CIAVMRPC",22,0)
 S:VAL>MAX VAL=MAX
"RTN","CIAVMRPC",23,0)
 Q VAL
"RTN","CIAVMRPC",24,0)
 ; RPC: Get/set DISV entry for selected file/IEN
"RTN","CIAVMRPC",25,0)
 ; If IEN is specified, entry is set
"RTN","CIAVMRPC",26,0)
 ; Returned as IEN^.01 internal value
"RTN","CIAVMRPC",27,0)
DISV(DATA,FILE,IEN) ;
"RTN","CIAVMRPC",28,0)
 S FILE=$$ROOT^DILFD(+FILE)
"RTN","CIAVMRPC",29,0)
 I FILE="" S DATA=0 Q
"RTN","CIAVMRPC",30,0)
 S:$G(IEN) ^DISV(DUZ,FILE)=IEN
"RTN","CIAVMRPC",31,0)
 S DATA=+$G(^DISV(DUZ,FILE))
"RTN","CIAVMRPC",32,0)
 S:DATA $P(DATA,U,2)=$P($G(@(FILE_DATA_",0)")),U)
"RTN","CIAVMRPC",33,0)
 Q
"RTN","CIAVMRPC",34,0)
 ; RPC: Return version of package
"RTN","CIAVMRPC",35,0)
VERSION(DATA,PKG) ;
"RTN","CIAVMRPC",36,0)
 S DATA=$$VERSION^XPDUTL(PKG)
"RTN","CIAVMRPC",37,0)
 Q
"RTN","CIAVMRPC",38,0)
 ; RPC: Return true if patch installed
"RTN","CIAVMRPC",39,0)
PATCH(DATA,PATCH) ;
"RTN","CIAVMRPC",40,0)
 S DATA=$$PATCH^XPDUTL(PATCH)
"RTN","CIAVMRPC",41,0)
 Q
"RTN","CIAVMRPC",42,0)
 ; RPC: Returns value for named parameter
"RTN","CIAVMRPC",43,0)
GETPAR(DATA,PARAM,ENT,INST,FMT,USR) ;
"RTN","CIAVMRPC",44,0)
 N X
"RTN","CIAVMRPC",45,0)
 S ENT=$$ENT(PARAM,.ENT,.USR),DATA=$S($L(ENT):$$GET^XPAR(ENT,PARAM,.INST,.FMT),1:"")
"RTN","CIAVMRPC",46,0)
 Q
"RTN","CIAVMRPC",47,0)
 ; RPC: Get multivalued parameter values
"RTN","CIAVMRPC",48,0)
GETPARLI(DATA,PARAM,ENT,FMT,USR) ;
"RTN","CIAVMRPC",49,0)
 N TMP,X
"RTN","CIAVMRPC",50,0)
 D GETLST^XPAR(.TMP,$$ENT(PARAM,.ENT,.USR),PARAM,.FMT,.ERR)
"RTN","CIAVMRPC",51,0)
 I $G(ERR) K TMP S TMP=ERR
"RTN","CIAVMRPC",52,0)
 E  S TMP=""
"RTN","CIAVMRPC",53,0)
 S DATA=$$TMPGBL
"RTN","CIAVMRPC",54,0)
 M @DATA=TMP
"RTN","CIAVMRPC",55,0)
 Q
"RTN","CIAVMRPC",56,0)
 ; RPC: Get WP parameter value
"RTN","CIAVMRPC",57,0)
GETPARWP(DATA,PARAM,ENT,INST,USR) ;
"RTN","CIAVMRPC",58,0)
 N TMP,X
"RTN","CIAVMRPC",59,0)
 D GETWP^XPAR(.TMP,$$ENT(PARAM,.ENT,.USR),PARAM,.INST,.ERR)
"RTN","CIAVMRPC",60,0)
 I $G(ERR) K TMP S TMP=ERR
"RTN","CIAVMRPC",61,0)
 E  S TMP=""
"RTN","CIAVMRPC",62,0)
 S DATA=$$TMPGBL
"RTN","CIAVMRPC",63,0)
 M @DATA=TMP
"RTN","CIAVMRPC",64,0)
 Q
"RTN","CIAVMRPC",65,0)
 ; Return entity list (if ENT not specified)
"RTN","CIAVMRPC",66,0)
ENT(PAR,ENT,USR) ;EP
"RTN","CIAVMRPC",67,0)
 N I,X,Y,Z
"RTN","CIAVMRPC",68,0)
 Q:$L($G(ENT)) ENT
"RTN","CIAVMRPC",69,0)
 I $L(PAR),PAR'=+PAR S PAR=$O(^XTV(8989.51,"B",PAR,0))
"RTN","CIAVMRPC",70,0)
 Q:'PAR ""
"RTN","CIAVMRPC",71,0)
 S X="",I=0,USR=$G(USR,DUZ)
"RTN","CIAVMRPC",72,0)
 F  S I=+$O(^XTV(8989.51,PAR,30,"B",I)) Q:'I  S Y=$O(^(I,0)) D:Y
"RTN","CIAVMRPC",73,0)
 .S Y=$P($G(^XTV(8989.518,+$P($G(^XTV(8989.51,PAR,30,Y,0)),U,2),0)),U,2)
"RTN","CIAVMRPC",74,0)
 .Q:'$L(Y)
"RTN","CIAVMRPC",75,0)
 .I "DIV^SYS^PKG"[Y S X=X_U_Y Q
"RTN","CIAVMRPC",76,0)
 .I Y="USR" S X=X_U_"USR.`"_USR Q
"RTN","CIAVMRPC",77,0)
 .I Y="SRV" S Z=+$G(^VA(200,USR,5)) S:Z X=X_U_"SRV.`"_Z Q
"RTN","CIAVMRPC",78,0)
 .I Y="OTL" Q                                                          ; OE/RR TEAM
"RTN","CIAVMRPC",79,0)
 .I Y="TEA" Q                                                          ; TEAM
"RTN","CIAVMRPC",80,0)
 .I Y="CLS" D  Q
"RTN","CIAVMRPC",81,0)
 ..S Z=0
"RTN","CIAVMRPC",82,0)
 ..F  S Z=$O(^USR(8930.3,"AUC",USR,Z)) Q:'Z  D CLS(Z)
"RTN","CIAVMRPC",83,0)
 .I Y="LOC",$G(CIA("UID")) D  Q
"RTN","CIAVMRPC",84,0)
 ..S Z=+$$GETVAR^CIANBUTL("ENCOUNTER.ID.ALTERNATEVISITID",,"CONTEXT.ENCOUNTER")
"RTN","CIAVMRPC",85,0)
 ..S:Z X=X_U_"LOC.`"_Z
"RTN","CIAVMRPC",86,0)
 Q $E(X,2,$L(X))
"RTN","CIAVMRPC",87,0)
 ; Append user class memberships to entity list
"RTN","CIAVMRPC",88,0)
CLS(Z) N Y
"RTN","CIAVMRPC",89,0)
 S X=X_U_"CLS.`"_Z,Y=0
"RTN","CIAVMRPC",90,0)
 F  S Y=$O(^USR(8930,"AD",Z,Y)) Q:'Y  D CLS(Y)
"RTN","CIAVMRPC",91,0)
 Q
"RTN","CIAVMRPC",92,0)
 ; RPC: Changes value for named parameter
"RTN","CIAVMRPC",93,0)
SETPAR(DATA,PARAM,VAL,ENT,INST) ;
"RTN","CIAVMRPC",94,0)
 D EN^XPAR($G(ENT,"PKG"),PARAM,$G(INST,1),.VAL,.DATA)
"RTN","CIAVMRPC",95,0)
 Q
"RTN","CIAVMRPC",96,0)
 ; Return parameters matching prefix
"RTN","CIAVMRPC",97,0)
GETPARPF(DATA,PFX) ;
"RTN","CIAVMRPC",98,0)
 N LP,CNT,LEN
"RTN","CIAVMRPC",99,0)
 S LP=PFX,CNT=0,LEN=$L(PFX)
"RTN","CIAVMRPC",100,0)
 F  D:$O(^XTV(8989.51,"B",LP,0))  S LP=$O(^XTV(8989.51,"B",LP)) Q:$E(LP,1,LEN)'=PFX
"RTN","CIAVMRPC",101,0)
 .S CNT=CNT+1,DATA(CNT)=LP
"RTN","CIAVMRPC",102,0)
 Q
"RTN","CIAVMRPC",103,0)
 ; RPC: Get stored variable(s)
"RTN","CIAVMRPC",104,0)
GETVAR(DATA,LIST,NMSP) ;
"RTN","CIAVMRPC",105,0)
 N CNT
"RTN","CIAVMRPC",106,0)
 S:$L($G(LIST)) LIST(-99)=LIST
"RTN","CIAVMRPC",107,0)
 S LIST="",CNT=0
"RTN","CIAVMRPC",108,0)
 F  S LIST=$O(LIST(LIST)) Q:'$L(LIST)  D
"RTN","CIAVMRPC",109,0)
 .S CNT=CNT+1,DATA(CNT)=LIST(LIST)_"="_$$GETVAR^CIANBUTL(LIST(LIST),,.NMSP)
"RTN","CIAVMRPC",110,0)
 Q
"RTN","CIAVMRPC",111,0)
 ; RPC: Set stored variable(s)
"RTN","CIAVMRPC",112,0)
SETVAR(DATA,LIST,NMSP,RESET) ;
"RTN","CIAVMRPC",113,0)
 S:$L($G(LIST)) LIST(-99)=LIST
"RTN","CIAVMRPC",114,0)
 S LIST="",DATA=0
"RTN","CIAVMRPC",115,0)
 D:$G(RESET) CLRVAR^CIANBUTL(.NMSP)
"RTN","CIAVMRPC",116,0)
 F  S LIST=$O(LIST(LIST)) Q:'$L(LIST)  D
"RTN","CIAVMRPC",117,0)
 .S DATA=DATA+1
"RTN","CIAVMRPC",118,0)
 .D SETVAR^CIANBUTL($P(LIST(LIST),"="),$P(LIST(LIST),"=",2,9999),.NMSP)
"RTN","CIAVMRPC",119,0)
 Q
"RTN","CIAVMRPC",120,0)
 ; RPC: Get .01 field values from a file
"RTN","CIAVMRPC",121,0)
GETIDX(DATA,FN,FLG) ;
"RTN","CIAVMRPC",122,0)
 N X,I,Z
"RTN","CIAVMRPC",123,0)
 S DATA=$$TMPGBL,X=0,FN=$$ROOT^DILFD(FN,,1),I=0,FLG=+$G(FLG)
"RTN","CIAVMRPC",124,0)
 I $L(FN) F  S X=$O(@FN@(X)) Q:'X  D
"RTN","CIAVMRPC",125,0)
 .S Z=$P($G(@FN@(X,0)),U)
"RTN","CIAVMRPC",126,0)
 .S:$L(Z) I=I+1,@DATA@(I)=$S(FLG:Z,1:X_U_Z)
"RTN","CIAVMRPC",127,0)
 Q
"RTN","CIAVMRPC",128,0)
 ; RPC: Convert date input to FM format
"RTN","CIAVMRPC",129,0)
STRTODAT(DATA,VAL,FMT) ;
"RTN","CIAVMRPC",130,0)
 N %DT,X,Y
"RTN","CIAVMRPC",131,0)
 I VAL'["@",VAL[" " S VAL=$TR(VAL," ","@")
"RTN","CIAVMRPC",132,0)
 I VAL["@",$TR($P(VAL,"@",2),":0")="" S $P(VAL,"@",2)="00:00:01"
"RTN","CIAVMRPC",133,0)
 S %DT=$G(FMT,"TS"),X=VAL
"RTN","CIAVMRPC",134,0)
 D ^%DT
"RTN","CIAVMRPC",135,0)
 S DATA=$S(Y>0:Y,1:"")
"RTN","CIAVMRPC",136,0)
 Q
"RTN","CIAVMRPC",137,0)
 ; Compare version # VER1 with VER2
"RTN","CIAVMRPC",138,0)
 ; Returns -1 if <; 0 if =; 1 if >
"RTN","CIAVMRPC",139,0)
VERCMP(VER1,VER2,PC) ;EP
"RTN","CIAVMRPC",140,0)
 N X,Y,V1,V2
"RTN","CIAVMRPC",141,0)
 S:'$G(PC) PC=4
"RTN","CIAVMRPC",142,0)
 S Y=0
"RTN","CIAVMRPC",143,0)
 F X=1:1:PC D  Q:Y
"RTN","CIAVMRPC",144,0)
 .S V1=+$P(VER1,".",X),V2=+$P(VER2,".",X)
"RTN","CIAVMRPC",145,0)
 .S:V1'=V2 Y=$S(V1>V2:1,1:-1)
"RTN","CIAVMRPC",146,0)
 Q Y
"RTN","CIAVMRPC",147,0)
 ; Get temp global reference
"RTN","CIAVMRPC",148,0)
TMPGBL(X) ;EP
"RTN","CIAVMRPC",149,0)
 K ^TMP("CIAVMRPC"_$G(X),$J) Q $NA(^($J))
"RTN","CIAVMSER")
0^6^B13118426
"RTN","CIAVMSER",1,0)
CIAVMSER ;CIA/DKM - JSON Serialization Support ;03-Dec-2012 20:35;DU
"RTN","CIAVMSER",2,0)
 ;;1.0;CIAV;;19-Apr-2010 21:17;Build 15
"RTN","CIAVMSER",3,0)
 ;=================================================================
"RTN","CIAVMSER",4,0)
 ; RPC: Returns a serialized form of the requested object.
"RTN","CIAVMSER",5,0)
 ; Object identified by IEN.
"RTN","CIAVMSER",6,0)
GETBYIEN(DATA,ALIAS,IEN,PROP) ;
"RTN","CIAVMSER",7,0)
 I $D(IEN)>9 D  Q
"RTN","CIAVMSER",8,0)
 .N LP,DLM
"RTN","CIAVMSER",9,0)
 .D ADD("[")
"RTN","CIAVMSER",10,0)
 .S (LP,DLM)=""
"RTN","CIAVMSER",11,0)
 .F  S LP=$O(IEN(LP)) Q:'$L(LP)  D
"RTN","CIAVMSER",12,0)
 ..D ADD(DLM)
"RTN","CIAVMSER",13,0)
 ..S DLM=","
"RTN","CIAVMSER",14,0)
 ..D GETBYIEN(.DATA,ALIAS,IEN(LP),.PROP)
"RTN","CIAVMSER",15,0)
 .D ADD("]")
"RTN","CIAVMSER",16,0)
 N PFX,SER,RTN
"RTN","CIAVMSER",17,0)
 S PFX=$S($D(PROP):","_$$QT(PROP)_":",1:"")_"{"
"RTN","CIAVMSER",18,0)
 D:'$D(PROP) PUTQT("@class",ALIAS)
"RTN","CIAVMSER",19,0)
 D PUT("domainId",IEN)
"RTN","CIAVMSER",20,0)
 S SER=+$O(^CIAVSER("B",ALIAS,0))
"RTN","CIAVMSER",21,0)
 S RTN=$G(^CIAVSER(SER,1))
"RTN","CIAVMSER",22,0)
 S RTN=$S($L(RTN):RTN_"(.DATA,IEN)",1:"AUTO(.DATA,IEN,SER)")
"RTN","CIAVMSER",23,0)
 D @RTN
"RTN","CIAVMSER",24,0)
 D ADD("}")
"RTN","CIAVMSER",25,0)
 Q
"RTN","CIAVMSER",26,0)
 ; RPC: Returns the serialized form of the requested object.
"RTN","CIAVMSER",27,0)
 ; Object identified by table and unique key
"RTN","CIAVMSER",28,0)
GETBYKEY(DATA,ALIAS,KEY,TABLE) ;
"RTN","CIAVMSER",29,0)
 D GETBYIEN(.DATA,ALIAS,$$FIND1^DIC($$TABLE(TABLE),,"X",KEY))
"RTN","CIAVMSER",30,0)
 Q
"RTN","CIAVMSER",31,0)
 ; RPC: Returns a list of entries from a table
"RTN","CIAVMSER",32,0)
GETBYLST(DATA,ALIAS,LST,TABLE) ;
"RTN","CIAVMSER",33,0)
 N ARY,GBL,IEN,FLG
"RTN","CIAVMSER",34,0)
 S TABLE=$$TABLE(TABLE),GBL=$$ROOT^DILFD(TABLE,,1),IEN=0
"RTN","CIAVMSER",35,0)
 S ARY=$S($D(LST)>1:"LST",1:GBL),FLG=0
"RTN","CIAVMSER",36,0)
 D ADD("[")
"RTN","CIAVMSER",37,0)
 F  S IEN=$O(@ARY@(IEN)) Q:'IEN  D:$D(@GBL@(IEN,0))
"RTN","CIAVMSER",38,0)
 .D:FLG ADD(",")
"RTN","CIAVMSER",39,0)
 .D GETBYIEN(.DATA,ALIAS,IEN)
"RTN","CIAVMSER",40,0)
 .S FLG=1
"RTN","CIAVMSER",41,0)
 D ADD("]")
"RTN","CIAVMSER",42,0)
 Q
"RTN","CIAVMSER",43,0)
TABLE(T) Q $S(T=+T:T,1:+$O(^DIC("B",TABLE,0)))
"RTN","CIAVMSER",44,0)
 ; Table-driven serialization
"RTN","CIAVMSER",45,0)
AUTO(DATA,IEN,SER) ;
"RTN","CIAVMSER",46,0)
 N PROP,LP,FILE,IENS,FLD,VALS
"RTN","CIAVMSER",47,0)
 S FILE=$P(^CIAVSER(SER,0),U,2),IENS=IEN_",",FLD=""
"RTN","CIAVMSER",48,0)
 M PROP=^CIAVSER(SER,10)
"RTN","CIAVMSER",49,0)
 F LP=0:0 S LP=$O(PROP(LP)) Q:'LP  D
"RTN","CIAVMSER",50,0)
 .N FN
"RTN","CIAVMSER",51,0)
 .S FN=$P(PROP(LP,0),U,2)
"RTN","CIAVMSER",52,0)
 .Q:'$L(FN)
"RTN","CIAVMSER",53,0)
 .S:FN'=+FN FN=$$FLDNUM^DILFD(FILE,FN),$P(PROP(LP,0),U,2)=FN
"RTN","CIAVMSER",54,0)
 .S FLD=FLD_$S($L(FLD):";",1:"")_FN
"RTN","CIAVMSER",55,0)
 D GETS^DIQ(FILE,IENS,FLD,"IE","VALS")
"RTN","CIAVMSER",56,0)
 F LP=0:0 S LP=$O(PROP(LP)) Q:'LP  D
"RTN","CIAVMSER",57,0)
 .N PN,FN,TP,VL,CTL,X
"RTN","CIAVMSER",58,0)
 .S X=PROP(LP,0),PN=$P(X,U),FN=$P(X,U,2),TP=$P(X,U,3),CTL=$G(PROP(LP,10))
"RTN","CIAVMSER",59,0)
 .M:$L(FN) VL=VALS(FILE,IENS,FN)
"RTN","CIAVMSER",60,0)
 .D:$L(TP) @("AUTO"_TP)
"RTN","CIAVMSER",61,0)
 Q
"RTN","CIAVMSER",62,0)
 ; Free text
"RTN","CIAVMSER",63,0)
AUTOF D PUTQT(PN,$G(VL("E")))
"RTN","CIAVMSER",64,0)
 Q
"RTN","CIAVMSER",65,0)
 ; Boolean
"RTN","CIAVMSER",66,0)
AUTOB D PUTBL(PN,$G(VL("I")))
"RTN","CIAVMSER",67,0)
 Q
"RTN","CIAVMSER",68,0)
 ; Date
"RTN","CIAVMSER",69,0)
AUTOD D PUTDT(PN,$G(VL("I")))
"RTN","CIAVMSER",70,0)
 Q
"RTN","CIAVMSER",71,0)
 ; Raw
"RTN","CIAVMSER",72,0)
AUTOR D PUTQT(PN,$G(VL("I")))
"RTN","CIAVMSER",73,0)
 Q
"RTN","CIAVMSER",74,0)
 ; Word processing
"RTN","CIAVMSER",75,0)
AUTOW K VL("E"),VL("I")
"RTN","CIAVMSER",76,0)
 D PUTAR(PN,.VL)
"RTN","CIAVMSER",77,0)
 Q
"RTN","CIAVMSER",78,0)
 ; Custom
"RTN","CIAVMSER",79,0)
AUTOC X CTL
"RTN","CIAVMSER",80,0)
 Q
"RTN","CIAVMSER",81,0)
 ; Multiple (TODO)
"RTN","CIAVMSER",82,0)
AUTOM Q
"RTN","CIAVMSER",83,0)
 ; Object
"RTN","CIAVMSER",84,0)
AUTOO D:$G(VL("I")) GETBYIEN(.DATA,CTL,$G(VL("I")),PN)
"RTN","CIAVMSER",85,0)
 Q
"RTN","CIAVMSER",86,0)
 ; Put a name/value pair to output buffer, enclosing
"RTN","CIAVMSER",87,0)
 ; value in quotes.
"RTN","CIAVMSER",88,0)
PUTQT(NM,VL) ;
"RTN","CIAVMSER",89,0)
 D PUT(NM,$$QT(VL))
"RTN","CIAVMSER",90,0)
 Q
"RTN","CIAVMSER",91,0)
 ; Put a name/value pair to output buffer
"RTN","CIAVMSER",92,0)
PUT(NM,VL) ;
"RTN","CIAVMSER",93,0)
 D ADD(PFX_$$QT(NM)_":"_VL)
"RTN","CIAVMSER",94,0)
 S PFX=","
"RTN","CIAVMSER",95,0)
 Q
"RTN","CIAVMSER",96,0)
 ; Put a date value to output buffer
"RTN","CIAVMSER",97,0)
PUTDT(NM,DT) ;
"RTN","CIAVMSER",98,0)
 D:DT PUTQT(NM,DT)
"RTN","CIAVMSER",99,0)
 Q
"RTN","CIAVMSER",100,0)
 ; Put a boolean value to output buffer
"RTN","CIAVMSER",101,0)
PUTBL(NM,BL) ;
"RTN","CIAVMSER",102,0)
 D PUT(NM,$S(BL:"true",1:"false"))
"RTN","CIAVMSER",103,0)
 Q
"RTN","CIAVMSER",104,0)
 ; Put a set value to output buffer
"RTN","CIAVMSER",105,0)
PUTST(NM,VL,ST) ;
"RTN","CIAVMSER",106,0)
 D PUTQT(NM,$$SET^CIAU(VL,ST))
"RTN","CIAVMSER",107,0)
 Q
"RTN","CIAVMSER",108,0)
 ; Put an array to output buffer
"RTN","CIAVMSER",109,0)
PUTAR(NM,AR) ;
"RTN","CIAVMSER",110,0)
 N DL,LP
"RTN","CIAVMSER",111,0)
 S DL="",LP=$NA(AR)
"RTN","CIAVMSER",112,0)
 D PUT(NM,"[")
"RTN","CIAVMSER",113,0)
 F  S LP=$Q(@LP) Q:'$L(LP)  D
"RTN","CIAVMSER",114,0)
 .D ADD(DL_$$QT(@LP))
"RTN","CIAVMSER",115,0)
 .S DL=","
"RTN","CIAVMSER",116,0)
 D ADD("]")
"RTN","CIAVMSER",117,0)
 Q
"RTN","CIAVMSER",118,0)
 ; Add to output buffer
"RTN","CIAVMSER",119,0)
ADD(X) S DATA($O(DATA(""),-1)+1)=X
"RTN","CIAVMSER",120,0)
 Q
"RTN","CIAVMSER",121,0)
 ; Enclose value in quotes (escape contents if necessary)
"RTN","CIAVMSER",122,0)
QT(X) N QT,FM,TO,LP
"RTN","CIAVMSER",123,0)
 S QT=""""
"RTN","CIAVMSER",124,0)
 S FM="\"_QT_"/"_$C(8,12,10,13,9)
"RTN","CIAVMSER",125,0)
 S TO="\"_QT_"/bfnrt"
"RTN","CIAVMSER",126,0)
 F LP=1:1:$L(FM) D ESC(.X,$E(FM,LP),$E(TO,LP))
"RTN","CIAVMSER",127,0)
 Q QT_X_QT
"RTN","CIAVMSER",128,0)
ESC(X,C,R) S:X[C X=$$SUBST^CIAU(X,C,"\"_R)
"RTN","CIAVMSER",129,0)
 Q
"RTN","CIAVMSER",130,0)
 ; Serialize a service category
"RTN","CIAVMSER",131,0)
SSVCCAT(DATA,IEN) ;
"RTN","CIAVMSER",132,0)
 N SC,X
"RTN","CIAVMSER",133,0)
 D GETLST^XPAR(.SC,"ALL","BEHOENCX VISIT TYPES","I")
"RTN","CIAVMSER",134,0)
 F X=0:0 S X=$O(SC(X)) Q:'X  Q:$A(SC(X))=IEN
"RTN","CIAVMSER",135,0)
 S X=$S(X:SC(X),1:"~Unknown~Unknown service category.")
"RTN","CIAVMSER",136,0)
 D PUTQT("shortDescription",$P(X,"~",2))
"RTN","CIAVMSER",137,0)
 D PUTQT("longDescription",$P(X,"~",3))
"RTN","CIAVMSER",138,0)
 Q
"RTN","CIAVUTPR")
0^7^B2426270
"RTN","CIAVUTPR",1,0)
CIAVUTPR ;MSC/IND/DKM - Parameter management ;09-May-2010 18:34;DKM
"RTN","CIAVUTPR",2,0)
 ;;1.1V2;VUECENTRIC FRAMEWORK;;Mar 20, 2007;Build 15
"RTN","CIAVUTPR",3,0)
 ;;Copyright 2000-2006, Medsphere Systems Corporation
"RTN","CIAVUTPR",4,0)
 ;=================================================================
"RTN","CIAVUTPR",5,0)
 ; Load a parameter template
"RTN","CIAVUTPR",6,0)
GETTPL(DATA,TPL) ;
"RTN","CIAVUTPR",7,0)
 N PAR,SEQ,CNT,LP,X0,X1
"RTN","CIAVUTPR",8,0)
 S:TPL'=+TPL TPL=+$$FIND1^DIC(8989.52,,"X",TPL)
"RTN","CIAVUTPR",9,0)
 I '$D(^XTV(8989.52,TPL,0)) S DATA(1)="-1^Not found" Q
"RTN","CIAVUTPR",10,0)
 S CNT=1,SEQ="",X0=^XTV(8989.52,TPL,0),X1=+$P(X0,U,3)
"RTN","CIAVUTPR",11,0)
 S X1=$S(X1=4:"DIV",X1=4.2:"SYS",X1=9.4:"PKG",X1=49:"SRV",X1=200:"USR",1:"")
"RTN","CIAVUTPR",12,0)
 I '$L(X1) S DATA(1)="-2^Bad entity" Q
"RTN","CIAVUTPR",13,0)
 S $P(X0,U,3)=X1,DATA(1)=TPL_U_X0
"RTN","CIAVUTPR",14,0)
 F  S SEQ=$O(^XTV(8989.52,TPL,10,"B",SEQ)),LP=0 Q:'$L(SEQ)  D
"RTN","CIAVUTPR",15,0)
 .F  S LP=$O(^XTV(8989.52,TPL,10,"B",SEQ,LP)) Q:'LP  D
"RTN","CIAVUTPR",16,0)
 ..S PAR=+$P($G(^XTV(8989.52,TPL,10,LP,0)),U,2)
"RTN","CIAVUTPR",17,0)
 ..S X0=$$GETPAR(PAR)
"RTN","CIAVUTPR",18,0)
 ..S:$L(X0) CNT=CNT+1,DATA(CNT)=X0
"RTN","CIAVUTPR",19,0)
 Q
"RTN","CIAVUTPR",20,0)
 ; Return parameter attributes
"RTN","CIAVUTPR",21,0)
GETPAR(PAR) ;
"RTN","CIAVUTPR",22,0)
 N X0,X1
"RTN","CIAVUTPR",23,0)
 I $L(PAR),PAR'=+PAR S PAR=$O(^XTV(8989.51,"B",PAR,0))
"RTN","CIAVUTPR",24,0)
 S X0=$G(^XTV(8989.51,PAR,0)),X1=$G(^(1))
"RTN","CIAVUTPR",25,0)
 Q $S($L(X0):PAR_U_$P(X0,U)_U_$P(X0,U,2)_U_X1,1:"")
"RTN","CIAVUTPR",26,0)
 ; Return parameter instances
"RTN","CIAVUTPR",27,0)
GETINST(DATA,PAR,ENT) ;
"RTN","CIAVUTPR",28,0)
 N CNT,LP
"RTN","CIAVUTPR",29,0)
 S:PAR'=+PAR PAR=$O(^XTV(8989.51,"B",PAR,0))
"RTN","CIAVUTPR",30,0)
 D ENTDFLT^XPAR1(.ENT)
"RTN","CIAVUTPR",31,0)
 S CNT=0,LP=""
"RTN","CIAVUTPR",32,0)
 F  S LP=$O(^XTV(8989.5,"AC",PAR,ENT,LP)) Q:'$L(LP)  D
"RTN","CIAVUTPR",33,0)
 .S CNT=CNT+1,DATA(CNT)=LP
"RTN","CIAVUTPR",34,0)
 Q
"SEC","^DIC",8989.51,8989.51,0,"AUDIT")
@
"SEC","^DIC",8989.51,8989.51,0,"DD")
@
"SEC","^DIC",8989.51,8989.51,0,"DEL")
@
"SEC","^DIC",8989.51,8989.51,0,"LAYGO")
@
"SEC","^DIC",8989.51,8989.51,0,"RD")
@
"SEC","^DIC",8989.51,8989.51,0,"WR")
@
"SEC","^DIC",8989.52,8989.52,0,"AUDIT")
@
"SEC","^DIC",8989.52,8989.52,0,"DD")
@
"SEC","^DIC",8989.52,8989.52,0,"DEL")
@
"SEC","^DIC",8989.52,8989.52,0,"LAYGO")
@
"SEC","^DIC",8989.52,8989.52,0,"RD")
@
"SEC","^DIC",8989.52,8989.52,0,"WR")
@
"SEC","^DIC",19930.2,19930.2,0,"AUDIT")
@
"SEC","^DIC",19930.2,19930.2,0,"DD")
@
"SEC","^DIC",19930.2,19930.2,0,"DEL")
@
"SEC","^DIC",19930.2,19930.2,0,"LAYGO")
@
"SEC","^DIC",19930.2,19930.2,0,"RD")
@
"SEC","^DIC",19930.2,19930.2,0,"WR")
@
"SEC","^DIC",19930.3,19930.3,0,"AUDIT")
@
"SEC","^DIC",19930.3,19930.3,0,"DD")
@
"SEC","^DIC",19930.3,19930.3,0,"DEL")
@
"SEC","^DIC",19930.3,19930.3,0,"LAYGO")
@
"SEC","^DIC",19930.3,19930.3,0,"RD")
@
"SEC","^DIC",19930.3,19930.3,0,"WR")
@
"SEC","^DIC",19930.5,19930.5,0,"AUDIT")
@
"SEC","^DIC",19930.5,19930.5,0,"DD")
@
"SEC","^DIC",19930.5,19930.5,0,"DEL")
@
"SEC","^DIC",19930.5,19930.5,0,"LAYGO")
@
"SEC","^DIC",19930.5,19930.5,0,"RD")
@
"SEC","^DIC",19930.5,19930.5,0,"WR")
@
"SEC","^DIC",19941.21,19941.21,0,"AUDIT")
@
"SEC","^DIC",19941.21,19941.21,0,"DD")
@
"SEC","^DIC",19941.21,19941.21,0,"DEL")
@
"SEC","^DIC",19941.21,19941.21,0,"LAYGO")
@
"SEC","^DIC",19941.21,19941.21,0,"RD")
@
"SEC","^DIC",19941.21,19941.21,0,"WR")
@
"TEMP","EC")

"TEMP","FINAL")

"TEMP","INITIAL")

"TEMP","PARAM",1)
CAREWEB.PATIENT.LIST.DATES^1^
"TEMP","PARAM",1,1,0)
Today|T|T
"TEMP","PARAM",1,2,0)
Tomorrow|T+1|T+1
"TEMP","PARAM",1,3,0)
Yesterday|T-1|T-1
"TEMP","PARAM",1,4,0)
Last Week|T-7|T-7
"TEMP","PARAM",1,5,0)
Past Week|T-7|T
"TEMP","PARAM",1,6,0)
Past Month|T-31|T
"TEMP","PARAM",2)
DATABASE.NAME^1^GOLDB
"TEMP","PARAM",3)
DATABASE.BACKGROUNDCOLOR^1^lightblue
"TEMP","PTRS",19330.204)
3^19930.2^19.1
"TEMP","PTRS",19930.206)
2^19930.2^19930.21
"TEMP","PTRS",19930.221)
9^19930.2^19930.2
"TEMP","PTRS",19941.212)
20^19941.21^19.1
"TEMP","PTRS",19941.2121)
21^19941.21^19.1
"TEMP","TGT")
1
"VER")
8.0^22.0
"^DD",8989.51,8989.51,0)
FIELD^^30^19
"^DD",8989.51,8989.51,0,"DDA")
N
"^DD",8989.51,8989.51,0,"DT")
2970621
"^DD",8989.51,8989.51,0,"ID","WRITE")
N X S X=^(0) D EN^DDIOL($P(X,U,2),"","?36")
"^DD",8989.51,8989.51,0,"IX","AG",8989.513,.02)

"^DD",8989.51,8989.51,0,"IX","B",8989.51,.01)

"^DD",8989.51,8989.51,0,"IX","C",8989.51,.02)

"^DD",8989.51,8989.51,0,"IX","D",8989.514,.01)

"^DD",8989.51,8989.51,0,"NM","PARAMETER DEFINITION")

"^DD",8989.51,8989.51,0,"PT",8935.912,.02)

"^DD",8989.51,8989.51,0,"PT",8989.5,.02)

"^DD",8989.51,8989.51,0,"PT",8989.52,.04)

"^DD",8989.51,8989.51,0,"PT",8989.521,.02)

"^DD",8989.51,8989.51,0,"PT",19930.992,.01)

"^DD",8989.51,8989.51,0,"PT",19978.3,.08)

"^DD",8989.51,8989.51,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",8989.51,8989.51,.01,0)
NAME^RFX^^0;1^D VALID01^XPARDD1
"^DD",8989.51,8989.51,.01,1,0)
^.1
"^DD",8989.51,8989.51,.01,1,1,0)
8989.51^B
"^DD",8989.51,8989.51,.01,1,1,1)
S ^XTV(8989.51,"B",$E(X,1,30),DA)=""
"^DD",8989.51,8989.51,.01,1,1,2)
K ^XTV(8989.51,"B",$E(X,1,30),DA)
"^DD",8989.51,8989.51,.01,3)
Answer must be 3-30 characters in length.  Name must be unique.
"^DD",8989.51,8989.51,.01,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,.01,21,1,0)
This is the name of the parameter.  It should be namespaced according to the 
"^DD",8989.51,8989.51,.01,21,2,0)
package from which the parameter originated.
"^DD",8989.51,8989.51,.01,"DT")
2960207
"^DD",8989.51,8989.51,.02,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.02,1,0)
^.1
"^DD",8989.51,8989.51,.02,1,1,0)
8989.51^C^MUMPS
"^DD",8989.51,8989.51,.02,1,1,1)
S ^XTV(8989.51,"C",$$UPPER^XPARDD1(X),DA)=""
"^DD",8989.51,8989.51,.02,1,1,2)
K ^XTV(8989.51,"C",$$UPPER^XPARDD1(X),DA)
"^DD",8989.51,8989.51,.02,1,1,"%D",0)
^^2^2^2970606^
"^DD",8989.51,8989.51,.02,1,1,"%D",1,0)
Cross references display text for lookup.  Display text is put in upper
"^DD",8989.51,8989.51,.02,1,1,"%D",2,0)
case so lookup will be case insensitive.
"^DD",8989.51,8989.51,.02,1,1,"DT")
2960409
"^DD",8989.51,8989.51,.02,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.02,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,.02,21,1,0)
This is the displayable name for the parameter (allows mixed case, 
"^DD",8989.51,8989.51,.02,21,2,0)
non-namespaced names).
"^DD",8989.51,8989.51,.02,"DT")
2960409
"^DD",8989.51,8989.51,.03,0)
MULTIPLE VALUED^S^1:Yes;0:No;^0;3^Q
"^DD",8989.51,8989.51,.03,3)
Enter 'Yes' if multiple instances of the parameter are allowed for any single entity.
"^DD",8989.51,8989.51,.03,21,0)
^^3^3^2980705^
"^DD",8989.51,8989.51,.03,21,1,0)
If this field is set to 'Yes', multiple instances of the parameter will be 
"^DD",8989.51,8989.51,.03,21,2,0)
allowed for a single entity.  Otherwise, the value of the instance field
"^DD",8989.51,8989.51,.03,21,3,0)
for a given Entity-Parameter combination will always be '1'.
"^DD",8989.51,8989.51,.03,"DT")
2960207
"^DD",8989.51,8989.51,.04,0)
INSTANCE TERM^F^^0;4^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.04,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.04,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,.04,21,1,0)
This is a free text term that can be used when prompting for a new instance of 
"^DD",8989.51,8989.51,.04,21,2,0)
the parameter (in the case where the parameter in multiple valued).  If not 
"^DD",8989.51,8989.51,.04,21,3,0)
entered, the word "Instance" will be used.
"^DD",8989.51,8989.51,.04,"DT")
2960207
"^DD",8989.51,8989.51,.05,0)
VALUE TERM^F^^0;5^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.05,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.05,21,0)
^^2^2^2970626^
"^DD",8989.51,8989.51,.05,21,1,0)
This contains text that is issued as a prompt for the value.  If nothing
"^DD",8989.51,8989.51,.05,21,2,0)
is here, the prompt will be the word 'Value:'.
"^DD",8989.51,8989.51,.05,"DT")
2960612
"^DD",8989.51,8989.51,.06,0)
PROHIBIT EDITING^S^1:Yes;0:No;^0;6^Q
"^DD",8989.51,8989.51,.06,3)
Choose 'Disallow Editing' if editing of this field should not be allowed.
"^DD",8989.51,8989.51,.06,21,0)
^^2^2^2970306^
"^DD",8989.51,8989.51,.06,21,1,0)
This field prevents the parameter value from being edited with Fileman or
"^DD",8989.51,8989.51,.06,21,2,0)
any Parameters tools.
"^DD",8989.51,8989.51,.06,"DT")
2970317
"^DD",8989.51,8989.51,1.1,0)
VALUE DATA TYPE^S^D:date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;W:word processing;M:M code;C:constant;^1;1^Q
"^DD",8989.51,8989.51,1.1,3)
Enter the type of data this parameter will contain.
"^DD",8989.51,8989.51,1.1,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,1.1,21,1,0)
This is the type of data this parameter will contain.  This field is used to 
"^DD",8989.51,8989.51,1.1,21,2,0)
define a call to the reader (^DIR) in most cases.
"^DD",8989.51,8989.51,1.1,"DT")
2960528
"^DD",8989.51,8989.51,1.2,0)
VALUE DOMAIN^F^^1;2^K:$L(X)>100!($L(X)<1) X
"^DD",8989.51,8989.51,1.2,3)
Enter up to 100 characters to further define the data type (used by ^DIR).
"^DD",8989.51,8989.51,1.2,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,1.2,21,1,0)
This is a string that may be used to further specify the data type.  The 
"^DD",8989.51,8989.51,1.2,21,2,0)
string stored here should be appropriate for the second ^-piece of DIR(0) 
"^DD",8989.51,8989.51,1.2,21,3,0)
when used with the data type field.
"^DD",8989.51,8989.51,1.2,"DT")
2960207
"^DD",8989.51,8989.51,1.3,0)
VALUE HELP^F^^1;3^K:$L(X)>80!($L(X)<1) X
"^DD",8989.51,8989.51,1.3,3)
Enter a line of help text to be displayed when entering a parameter value.
"^DD",8989.51,8989.51,1.3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,1.3,21,1,0)
This field contains a line of help text that is displayed when the user 
"^DD",8989.51,8989.51,1.3,21,2,0)
requests help or encounters an error while entering the VALUE field in the 
"^DD",8989.51,8989.51,1.3,21,3,0)
PARAMETERS file.
"^DD",8989.51,8989.51,1.3,"DT")
2960207
"^DD",8989.51,8989.51,2,0)
VALUE VALIDATION CODE^K^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,2,3)
This is M code used by DIR (3rd piece of DIR(0)).
"^DD",8989.51,8989.51,2,9)
@
"^DD",8989.51,8989.51,2,21,0)
^^2^2^2980705^
"^DD",8989.51,8989.51,2,21,1,0)
This field contains the M code that is placed in the third piece of DIR(0)
"^DD",8989.51,8989.51,2,21,2,0)
when validating a value in the PARAMETERS file.
"^DD",8989.51,8989.51,2,"DT")
2960207
"^DD",8989.51,8989.51,3,0)
VALUE SCREEN CODE^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,3,3)
This is M code placed in DIR("S").
"^DD",8989.51,8989.51,3,9)
@
"^DD",8989.51,8989.51,3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,3,21,1,0)
This field contains M code that is used to screen allowable entries for the 
"^DD",8989.51,8989.51,3,21,2,0)
VALUE field in the PARAMETERS file.  The code is placed in DIR("S") when 
"^DD",8989.51,8989.51,3,21,3,0)
validating the entry.
"^DD",8989.51,8989.51,3,"DT")
2960207
"^DD",8989.51,8989.51,4,0)
KEYWORD^8989.514^^4;0
"^DD",8989.51,8989.51,6.1,0)
INSTANCE DATA TYPE^S^D:date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;^6;1^Q
"^DD",8989.51,8989.51,6.1,3)
Enter the type of data allowed for the INSTANCE field of the parameter.
"^DD",8989.51,8989.51,6.1,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.1,21,1,0)
This is the type of data that is contained in the INSTANCE field of the 
"^DD",8989.51,8989.51,6.1,21,2,0)
PARAMETERS file, if multiple parameter instances per entity are allowed.  
"^DD",8989.51,8989.51,6.1,21,3,0)
This field is used to define a call to the reader.
"^DD",8989.51,8989.51,6.1,"DT")
2960207
"^DD",8989.51,8989.51,6.2,0)
INSTANCE DOMAIN^F^^6;2^K:$L(X)>100!($L(X)<1) X
"^DD",8989.51,8989.51,6.2,3)
Enter up to 100 characters to further define the data type (used by ^DIR).
"^DD",8989.51,8989.51,6.2,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.2,21,1,0)
This may be used to further define the data type for the INSTANCE field of 
"^DD",8989.51,8989.51,6.2,21,2,0)
the parameter.  The string stored here should be appropriate for the second 
"^DD",8989.51,8989.51,6.2,21,3,0)
^-piece of DIR(0) when used with the data type field.
"^DD",8989.51,8989.51,6.2,"DT")
2960207
"^DD",8989.51,8989.51,6.3,0)
INSTANCE HELP^F^^6;3^K:$L(X)>80!($L(X)<1) X
"^DD",8989.51,8989.51,6.3,3)
Enter a line of help text to be displayed when entering the parameter instance.
"^DD",8989.51,8989.51,6.3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.3,21,1,0)
This field contains a line of help text that is displayed when the user 
"^DD",8989.51,8989.51,6.3,21,2,0)
requests help or encounters an error while entering the INSTANCE field of 
"^DD",8989.51,8989.51,6.3,21,3,0)
the PARAMETERS file.
"^DD",8989.51,8989.51,6.3,"DT")
2960207
"^DD",8989.51,8989.51,7,0)
INSTANCE VALIDATION CODE^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,7,3)
This is M code used by DIR (3rd piece of DIR(0)).
"^DD",8989.51,8989.51,7,9)
@
"^DD",8989.51,8989.51,7,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,7,21,1,0)
This field contains M code that is placed in the third piece of DIR(0) when 
"^DD",8989.51,8989.51,7,21,2,0)
validating the INSTANCE field in the PARAMETERS file.
"^DD",8989.51,8989.51,7,"DT")
2960207
"^DD",8989.51,8989.51,8,0)
INSTANCE SCREEN CODE^K^^8;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,8,3)
This is M code placed in DIR("S").
"^DD",8989.51,8989.51,8,9)
@
"^DD",8989.51,8989.51,8,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,8,21,1,0)
This field contains M code that is used to screen allowable entries for the 
"^DD",8989.51,8989.51,8,21,2,0)
INSTANCE field in the PARAMETERS file.  The code is placed in DIR("S") when 
"^DD",8989.51,8989.51,8,21,3,0)
validating the entry.
"^DD",8989.51,8989.51,8,"DT")
2960207
"^DD",8989.51,8989.51,20,0)
DESCRIPTION^8989.512^^20;0
"^DD",8989.51,8989.51,20,21,0)
^^1^1^2970626^
"^DD",8989.51,8989.51,20,21,1,0)
A description of the parameter may be entered here.
"^DD",8989.51,8989.51,30,0)
ALLOWABLE ENTITIES^8989.513I^^30;0
"^DD",8989.51,8989.51,30,21,0)
^^2^2^2960213^^
"^DD",8989.51,8989.51,30,21,1,0)
This multiple contains a list of entities (pointers to files) for which the 
"^DD",8989.51,8989.51,30,21,2,0)
parameter may be validly set.
"^DD",8989.51,8989.512,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",8989.51,8989.512,0,"DT")
2960207
"^DD",8989.51,8989.512,0,"NM","DESCRIPTION")

"^DD",8989.51,8989.512,0,"UP")
8989.51
"^DD",8989.51,8989.512,.01,0)
DESCRIPTION^WL^^0;1^Q
"^DD",8989.51,8989.512,.01,3)
Enter a description of the parameter and how it is used.
"^DD",8989.51,8989.512,.01,21,0)
^^1^1^2960207^
"^DD",8989.51,8989.512,.01,21,1,0)
This is text that describes the purpose and use of the parameter.
"^DD",8989.51,8989.512,.01,"DT")
2960207
"^DD",8989.51,8989.513,0)
ALLOWABLE ENTITIES SUB-FIELD^^.02^2
"^DD",8989.51,8989.513,0,"DT")
2970621
"^DD",8989.51,8989.513,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",8989.51,8989.513,0,"IX","B",8989.513,.01)

"^DD",8989.51,8989.513,0,"NM","ALLOWABLE ENTITIES")

"^DD",8989.51,8989.513,0,"UP")
8989.51
"^DD",8989.51,8989.513,.01,0)
PRECEDENCE^MRNJ6,2^^0;1^K:+X'=X!(X>999.99)!(X<0)!(X?.E1"."3N.N) X
"^DD",8989.51,8989.513,.01,1,0)
^.1
"^DD",8989.51,8989.513,.01,1,1,0)
8989.513^B
"^DD",8989.51,8989.513,.01,1,1,1)
S ^XTV(8989.51,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",8989.51,8989.513,.01,1,1,2)
K ^XTV(8989.51,DA(1),30,"B",$E(X,1,30),DA)
"^DD",8989.51,8989.513,.01,3)
Type a Number between 0 and 999.99, 2 Decimal Digits
"^DD",8989.51,8989.513,.01,21,0)
^^6^6^2960213^^^
"^DD",8989.51,8989.513,.01,21,1,0)
A single parameter may be set for several different types of entities.  This 
"^DD",8989.51,8989.513,.01,21,2,0)
lists the order in which entities are searched for a defined value.  For 
"^DD",8989.51,8989.513,.01,21,3,0)
example, if a parameter may be set for a package, a location, and a user, 
"^DD",8989.51,8989.513,.01,21,4,0)
and the respective precedents are 3, 2, 1, the value of the user parameter 
"^DD",8989.51,8989.513,.01,21,5,0)
would be returned.  If it did not exist, the value of the location 
"^DD",8989.51,8989.513,.01,21,6,0)
parameter.  If that did not exist, then the value of the package parameter.
"^DD",8989.51,8989.513,.01,"DT")
2960213
"^DD",8989.51,8989.513,.02,0)
ENTITY FILE^RP8989.518'^XTV(8989.518,^0;2^Q
"^DD",8989.51,8989.513,.02,1,0)
^.1
"^DD",8989.51,8989.513,.02,1,1,0)
8989.51^AG^MUMPS
"^DD",8989.51,8989.513,.02,1,1,1)
D AGS^XPARDD1
"^DD",8989.51,8989.513,.02,1,1,2)
D AGK^XPARDD1
"^DD",8989.51,8989.513,.02,1,1,"%D",0)
^^5^5^2980422^
"^DD",8989.51,8989.513,.02,1,1,"%D",1,0)
The AG x-ref has the format ^XTV(8989.51,PARAM,30,"AG",GLOBAL REF,DA)="".
"^DD",8989.51,8989.513,.02,1,1,"%D",2,0)
 
"^DD",8989.51,8989.513,.02,1,1,"%D",3,0)
It is used to screen the parameters that may be selected for a given entity 
"^DD",8989.51,8989.513,.02,1,1,"%D",4,0)
in the PARAMETERS file.  The global root is used because the entity is a 
"^DD",8989.51,8989.513,.02,1,1,"%D",5,0)
variable pointer.
"^DD",8989.51,8989.513,.02,1,1,"DT")
2960207
"^DD",8989.51,8989.513,.02,3)
Choose a file from which entities for this parameter are identified.
"^DD",8989.51,8989.513,.02,21,0)
^^3^3^2980422^
"^DD",8989.51,8989.513,.02,21,1,0)
This identifies an entity for which the parameter can be legally entered.  
"^DD",8989.51,8989.513,.02,21,2,0)
Entities are simply variable pointers.  The files which are eligible to be
"^DD",8989.51,8989.513,.02,21,3,0)
entities are listed in the PARAMETER ENTITY file.
"^DD",8989.51,8989.513,.02,"DT")
2970621
"^DD",8989.51,8989.514,0)
KEYWORD SUB-FIELD^^.01^1
"^DD",8989.51,8989.514,0,"DT")
3020819
"^DD",8989.51,8989.514,0,"IX","B",8989.514,.01)

"^DD",8989.51,8989.514,0,"NM","KEYWORD")

"^DD",8989.51,8989.514,0,"UP")
8989.51
"^DD",8989.51,8989.514,.01,0)
KEYWORD^MFX^^0;1^K:$L(X)>30!($L(X)<3) X I $D(^XTV(8989.51,"D",X)) D EN^DDIOL($C(7)_"  "_$$EZBLD^DIALOG(89895140),"","?0")
"^DD",8989.51,8989.514,.01,1,0)
^.1
"^DD",8989.51,8989.514,.01,1,1,0)
8989.514^B
"^DD",8989.51,8989.514,.01,1,1,1)
S ^XTV(8989.51,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",8989.51,8989.514,.01,1,1,2)
K ^XTV(8989.51,DA(1),4,"B",$E(X,1,30),DA)
"^DD",8989.51,8989.514,.01,1,2,0)
8989.51^D
"^DD",8989.51,8989.514,.01,1,2,1)
S ^XTV(8989.51,"D",$E(X,1,30),DA(1),DA)=""
"^DD",8989.51,8989.514,.01,1,2,2)
K ^XTV(8989.51,"D",$E(X,1,30),DA(1),DA)
"^DD",8989.51,8989.514,.01,1,2,3)
KeyWord Lookup
"^DD",8989.51,8989.514,.01,1,2,"%D",0)
^^2^2^3020819^
"^DD",8989.51,8989.514,.01,1,2,"%D",1,0)
This cross reference allows the use of the keyword for look up of 
"^DD",8989.51,8989.514,.01,1,2,"%D",2,0)
parameters.
"^DD",8989.51,8989.514,.01,1,2,"DT")
3020819
"^DD",8989.51,8989.514,.01,3)
Answer must be 3-30 characters in length
"^DD",8989.51,8989.514,.01,21,0)
^^3^3^3021010^
"^DD",8989.51,8989.514,.01,21,1,0)
This field provides a list of KEYWORDS that can be used for lookup of 
"^DD",8989.51,8989.514,.01,21,2,0)
Parameter definitions.  It is suggested that each entry only have
"^DD",8989.51,8989.514,.01,21,3,0)
one word.
"^DD",8989.51,8989.514,.01,"DT")
3021010
"^DD",8989.52,8989.52,0)
FIELD^^10^5
"^DD",8989.52,8989.52,0,"DDA")
N
"^DD",8989.52,8989.52,0,"DT")
2970619
"^DD",8989.52,8989.52,0,"ID","WRITE")
N X S X=^(0) D EN^DDIOL($P(X,U,2),"","?36")
"^DD",8989.52,8989.52,0,"IX","B",8989.52,.01)

"^DD",8989.52,8989.52,0,"NM","PARAMETER TEMPLATE")

"^DD",8989.52,8989.52,0,"PT",19930.993,.01)

"^DD",8989.52,8989.52,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",8989.52,8989.52,.01,0)
NAME^RFX^^0;1^D VALID01^XPARDD2
"^DD",8989.52,8989.52,.01,1,0)
^.1
"^DD",8989.52,8989.52,.01,1,1,0)
8989.52^B
"^DD",8989.52,8989.52,.01,1,1,1)
S ^XTV(8989.52,"B",$E(X,1,30),DA)=""
"^DD",8989.52,8989.52,.01,1,1,2)
K ^XTV(8989.52,"B",$E(X,1,30),DA)
"^DD",8989.52,8989.52,.01,3)
Name must be 3-30 characters, unique, and namespaced.
"^DD",8989.52,8989.52,.01,21,0)
^^2^2^2980705^
"^DD",8989.52,8989.52,.01,21,1,0)
This field contains the name of the parameter template.  The template
"^DD",8989.52,8989.52,.01,21,2,0)
names must be namespaced.
"^DD",8989.52,8989.52,.01,"DT")
2970318
"^DD",8989.52,8989.52,.02,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",8989.52,8989.52,.02,3)
Answer must be 3-30 characters in length.
"^DD",8989.52,8989.52,.02,12)
Only files defined as variable pointers in PARAMETERS (8989.5) are allowed.
"^DD",8989.52,8989.52,.02,12.1)
S DIC("S")="I $$ALLOW^XPARDD1(Y)"
"^DD",8989.52,8989.52,.02,21,0)
^^1^1^2970606^^^
"^DD",8989.52,8989.52,.02,21,1,0)
This is the display name (non-namespaced) for the template.
"^DD",8989.52,8989.52,.02,"DT")
2970318
"^DD",8989.52,8989.52,.03,0)
USE ENTITY FROM^*P1'^DIC(^0;3^S DIC("S")="I $$ALLOW^XPARDD1(Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",8989.52,8989.52,.03,3)
Choose the file which identifies the entity for which parameters will be entered.
"^DD",8989.52,8989.52,.03,12)
Only files defined as variable pointer in PARAMETERS (8989.5) are allowed.
"^DD",8989.52,8989.52,.03,12.1)
S DIC("S")="I $$ALLOW^XPARDD1(Y)"
"^DD",8989.52,8989.52,.03,21,0)
^^2^2^2970318^
"^DD",8989.52,8989.52,.03,21,1,0)
This identifies the file from which an entity will be selected. The
"^DD",8989.52,8989.52,.03,21,2,0)
parameters in this template will apply to that entity.
"^DD",8989.52,8989.52,.03,"DT")
2970318
"^DD",8989.52,8989.52,.04,0)
USE INSTANCE FROM^P8989.51'^XTV(8989.51,^0;4^Q
"^DD",8989.52,8989.52,.04,3)
The parameter identified here will be used to prompt for an instance which will be used for the multiple parameters in the template.
"^DD",8989.52,8989.52,.04,21,0)
^^3^3^2970619^
"^DD",8989.52,8989.52,.04,21,1,0)
This allows a parameter to be chosen which will be used to prompt for an
"^DD",8989.52,8989.52,.04,21,2,0)
instance value.  This instance value will be used for all other parameters
"^DD",8989.52,8989.52,.04,21,3,0)
in the template that are a multiple type.
"^DD",8989.52,8989.52,.04,"DT")
2970619
"^DD",8989.52,8989.52,10,0)
PARAMETERS^8989.521IA^^10;0
"^DD",8989.52,8989.52,10,21,0)
^^1^1^2970317^
"^DD",8989.52,8989.52,10,21,1,0)
This lists the parameters that make up the template.
"^DD",8989.52,8989.521,0)
PARAMETERS SUB-FIELD^^.02^2
"^DD",8989.52,8989.521,0,"DT")
2970317
"^DD",8989.52,8989.521,0,"ID","WRITE")
N X S X=^(0) I $P(X,U,2) D EN^DDIOL($P(^XTV(8989.51,+$P(X,U,2),0),U),"","?10")
"^DD",8989.52,8989.521,0,"IX","B",8989.521,.01)

"^DD",8989.52,8989.521,0,"NM","PARAMETERS")

"^DD",8989.52,8989.521,0,"UP")
8989.52
"^DD",8989.52,8989.521,.01,0)
SEQUENCE^MNJ7,3^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."4N.N) X
"^DD",8989.52,8989.521,.01,1,0)
^.1
"^DD",8989.52,8989.521,.01,1,1,0)
8989.521^B
"^DD",8989.52,8989.521,.01,1,1,1)
S ^XTV(8989.52,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",8989.52,8989.521,.01,1,1,2)
K ^XTV(8989.52,DA(1),10,"B",$E(X,1,30),DA)
"^DD",8989.52,8989.521,.01,3)
Type a Number between 1 and 999, 3 Decimal Digits
"^DD",8989.52,8989.521,.01,21,0)
^^2^2^2970317^
"^DD",8989.52,8989.521,.01,21,1,0)
This is the sequence in which the value(s) for this parameter should be
"^DD",8989.52,8989.521,.01,21,2,0)
prompted.
"^DD",8989.52,8989.521,.01,"DT")
2970317
"^DD",8989.52,8989.521,.02,0)
PARAMETER^P8989.51'^XTV(8989.51,^0;2^Q
"^DD",8989.52,8989.521,.02,3)
Enter the parameter that should be prompted at this sequence number.
"^DD",8989.52,8989.521,.02,21,0)
^^2^2^2970317^
"^DD",8989.52,8989.521,.02,21,1,0)
This points to the parameter that should be prompted for at this sequence
"^DD",8989.52,8989.521,.02,21,2,0)
in the template.
"^DD",8989.52,8989.521,.02,"DT")
2970317
"^DD",19930.2,19930.2,0)
FIELD^^99^27
"^DD",19930.2,19930.2,0,"DDA")
N
"^DD",19930.2,19930.2,0,"DT")
3071003
"^DD",19930.2,19930.2,0,"IX","B",19930.2,.01)

"^DD",19930.2,19930.2,0,"IX","C",19930.2,1)

"^DD",19930.2,19930.2,0,"NM","VUECENTRIC OBJECT REGISTRY")

"^DD",19930.2,19930.2,0,"PT",19930.221,.01)

"^DD",19930.2,19930.2,0,"PT",19930.991,.01)

"^DD",19930.2,19930.2,0,"PT",19930.992,.01)

"^DD",19930.2,19930.2,0,"PT",19978.3,.11)

"^DD",19930.2,19930.2,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19930.2,19930.2,.01,0)
PROGID^RFX^^0;1^S X=$$UP^XLFSTR(X) K:$L(X)>80!($L(X)<3) X
"^DD",19930.2,19930.2,.01,1,0)
^.1
"^DD",19930.2,19930.2,.01,1,1,0)
19930.2^B
"^DD",19930.2,19930.2,.01,1,1,1)
S ^CIAVOBJ(19930.2,"B",$E(X,1,30),DA)=""
"^DD",19930.2,19930.2,.01,1,1,2)
K ^CIAVOBJ(19930.2,"B",$E(X,1,30),DA)
"^DD",19930.2,19930.2,.01,1,1,"DT")
3000816
"^DD",19930.2,19930.2,.01,3)
Answer must be 3-80 characters in length
"^DD",19930.2,19930.2,.01,"DT")
3010709
"^DD",19930.2,19930.2,.5,0)
CLSID^FX^^.5;1^D XFCLSID^CIAVMCFG(.X)
"^DD",19930.2,19930.2,.5,3)
Enter class identifier for this component.
"^DD",19930.2,19930.2,.5,21,0)
^^3^3^3020425.094349
"^DD",19930.2,19930.2,.5,21,1,0)
This is an optional class identifier (GUID) for the component.  Specifying this
"^DD",19930.2,19930.2,.5,21,2,0)
allows a component to be referenced by class identifier prior to its initial
"^DD",19930.2,19930.2,.5,21,3,0)
deployment. 
"^DD",19930.2,19930.2,.5,"DT")
3020425
"^DD",19930.2,19930.2,1,0)
NAME^F^^0;2^K:$L(X)>40!($L(X)<3) X
"^DD",19930.2,19930.2,1,1,0)
^.1
"^DD",19930.2,19930.2,1,1,1,0)
19930.2^C^MUMPS
"^DD",19930.2,19930.2,1,1,1,1)
S ^CIAVOBJ(19930.2,"C",$E($$UP^XLFSTR(X),1,30),DA)=""
"^DD",19930.2,19930.2,1,1,1,2)
K ^CIAVOBJ(19930.2,"C",$E($$UP^XLFSTR(X),1,30),DA)
"^DD",19930.2,19930.2,1,1,1,"DT")
3010709
"^DD",19930.2,19930.2,1,3)
User friendly name for this object
"^DD",19930.2,19930.2,1,"DT")
3010709
"^DD",19930.2,19930.2,2,0)
VERSION^FX^^0;3^K:X'?1.4(1.10N.1".") X
"^DD",19930.2,19930.2,2,3)
Version of object residing in repository
"^DD",19930.2,19930.2,2,"DT")
3020618
"^DD",19930.2,19930.2,3,0)
SOURCE^F^^1;1^K:$L(X)>250!($L(X)<1) X
"^DD",19930.2,19930.2,3,3)
Name and optional path of executable file containing object
"^DD",19930.2,19930.2,3,"DT")
3010709
"^DD",19930.2,19930.2,4,0)
HEIGHT^NJ4,0^^0;4^K:+X'=X!(X>9999)!(X<10)!(X?.E1"."1.N) X
"^DD",19930.2,19930.2,4,3)
Default height for this object
"^DD",19930.2,19930.2,4,"DT")
3010709
"^DD",19930.2,19930.2,5,0)
WIDTH^NJ4,0^^0;5^K:+X'=X!(X>9999)!(X<10)!(X?.E1"."1.N) X
"^DD",19930.2,19930.2,5,3)
Default width for this object
"^DD",19930.2,19930.2,5,"DT")
3010709
"^DD",19930.2,19930.2,6,0)
CATEGORY^19930.206P^^2;0
"^DD",19930.2,19930.2,7,0)
MD5 CHECKSUM^FX^^0;6^K:$L(X)'=32!($TR(X,"0123456789ABCDEF")'="") X
"^DD",19930.2,19930.2,7,3)
This is the MD5 checksum for the file.
"^DD",19930.2,19930.2,7,"DT")
3071003
"^DD",19930.2,19930.2,8,0)
SERIALIZABLE^19930.201^^4;0
"^DD",19930.2,19930.2,8,"DT")
3020322
"^DD",19930.2,19930.2,9,0)
INITIALIZATION^19930.202^^5;0
"^DD",19930.2,19930.2,10,0)
REQUIRED^19930.203^^6;0
"^DD",19930.2,19930.2,11,0)
PROPEDIT^S^0:NO;1:YES;^7;1^Q
"^DD",19930.2,19930.2,11,3)
If yes, use object's internal property editor.
"^DD",19930.2,19930.2,11,"DT")
3010709
"^DD",19930.2,19930.2,12,0)
MULTIPLE^S^0:NO;1:YES;^7;2^Q
"^DD",19930.2,19930.2,12,3)
If yes, multiple instances are allowed.
"^DD",19930.2,19930.2,12,"DT")
3010709
"^DD",19930.2,19930.2,13,0)
DISABLED^S^0:NO;1:YES;^7;3^Q
"^DD",19930.2,19930.2,13,3)
If yes, the object is unavailable for use.
"^DD",19930.2,19930.2,13,"DT")
3010709
"^DD",19930.2,19930.2,14,0)
ALLKEYS^S^0:NO;1:YES;^7;4^Q
"^DD",19930.2,19930.2,14,3)
If yes, all listed security keys are required.
"^DD",19930.2,19930.2,14,21,0)
^^2^2^3001016.110725
"^DD",19930.2,19930.2,14,21,1,0)
If set to YES, all keys listed in the KEYS multiple are required to use this
"^DD",19930.2,19930.2,14,21,2,0)
object.  If set to NO, at least one of the KEYS listed is required.
"^DD",19930.2,19930.2,14,"DT")
3010709
"^DD",19930.2,19930.2,15,0)
HIDDEN^S^0:NO;1:YES;^7;5^Q
"^DD",19930.2,19930.2,15,21,0)
^^1^1^3001112.105717
"^DD",19930.2,19930.2,15,21,1,0)
If set to yes, the object will not appear on the Add Object dialog.
"^DD",19930.2,19930.2,15,"DT")
3010709
"^DD",19930.2,19930.2,16,0)
SIDEBYSIDE^S^0:NO;1:YES;^7;6^Q
"^DD",19930.2,19930.2,16,3)
Enter YES to force side-by-side versioning.
"^DD",19930.2,19930.2,16,21,0)
^^2^2^3010127.14374
"^DD",19930.2,19930.2,16,21,1,0)
Side-by-side versioning allows multiple versions of the same COM object to
"^DD",19930.2,19930.2,16,21,2,0)
run on the client concurrently.
"^DD",19930.2,19930.2,16,"DT")
3010709
"^DD",19930.2,19930.2,17,0)
SERVICE^S^0:NO;1:YES;^7;7^Q
"^DD",19930.2,19930.2,17,21,0)
^^2^2^3010328.16515
"^DD",19930.2,19930.2,17,21,1,0)
If YES, indicates that this object is a shared service rather than a visual
"^DD",19930.2,19930.2,17,21,2,0)
component.
"^DD",19930.2,19930.2,17,"DT")
3010709
"^DD",19930.2,19930.2,18,0)
REGRESS^S^0:NO;1:YES;^7;8^Q
"^DD",19930.2,19930.2,18,3)
Enter YES to force version regression for this object.
"^DD",19930.2,19930.2,18,21,0)
^^4^4^3010418^
"^DD",19930.2,19930.2,18,21,1,0)
If set to YES, the object will be retrieved from the repository if
"^DD",19930.2,19930.2,18,21,2,0)
the local version differs in version from the repository version even
"^DD",19930.2,19930.2,18,21,3,0)
if the latter is older.  This is useful if there is a need to back out
"^DD",19930.2,19930.2,18,21,4,0)
a newer version of an object.
"^DD",19930.2,19930.2,18,"DT")
3010709
"^DD",19930.2,19930.2,19,0)
NOREGISTER^S^0:NO;1:YES;^7;9^Q
"^DD",19930.2,19930.2,19,3)
Enter yes to suppress automatic CSS registration.
"^DD",19930.2,19930.2,19,21,0)
^^4^4^3021128.12265
"^DD",19930.2,19930.2,19,21,1,0)
If yes, the VIM does not automatically register the object with the CSS.
"^DD",19930.2,19930.2,19,21,2,0)
This should only be selected if the object does not require event
"^DD",19930.2,19930.2,19,21,3,0)
notification or dynamic discovery or if the object performs its own
"^DD",19930.2,19930.2,19,21,4,0)
registration.
"^DD",19930.2,19930.2,19,"DT")
3021128
"^DD",19930.2,19930.2,20,0)
KEYS^19930.204P^^3;0
"^DD",19930.2,19930.2,21,0)
USES^19930.221P^^9;0
"^DD",19930.2,19930.2,21,12)
Prevents self reference
"^DD",19930.2,19930.2,21,12.1)
S DIC("S")="I DA'=Y"
"^DD",19930.2,19930.2,22,0)
DOTNET^S^0:NO;1:YES;^7;10^Q
"^DD",19930.2,19930.2,22,3)
Enter YES if this is a .NET assembly requiring COM registration.
"^DD",19930.2,19930.2,22,21,0)
^^4^4^3050329.074758
"^DD",19930.2,19930.2,22,21,1,0)
A setting of YES indicates that this component is a .NET assembly that 
"^DD",19930.2,19930.2,22,21,2,0)
requires COM interoperability.  This setting causes the Framework to create a 
"^DD",19930.2,19930.2,22,21,3,0)
Windows registry entry to allow all .NET components within the assembly to be 
"^DD",19930.2,19930.2,22,21,4,0)
accessed through COM interfaces.
"^DD",19930.2,19930.2,22,"DT")
3050329
"^DD",19930.2,19930.2,23,0)
ALIAS^19930.223^^10;0
"^DD",19930.2,19930.2,98,0)
TECHNICAL DESCRIPTION^19930.298^^98;0
"^DD",19930.2,19930.2,99,0)
DESCRIPTION^19930.209^^8;0
"^DD",19930.2,19930.201,0)
SERIALIZABLE SUB-FIELD^^.01^1
"^DD",19930.2,19930.201,0,"DT")
3020322
"^DD",19930.2,19930.201,0,"NM","SERIALIZABLE")

"^DD",19930.2,19930.201,0,"UP")
19930.2
"^DD",19930.2,19930.201,.01,0)
SERIALIZABLE^WL^^0;1^Q
"^DD",19930.2,19930.201,.01,"DT")
3020322
"^DD",19930.2,19930.202,0)
INITIALIZATION SUB-FIELD^^.01^1
"^DD",19930.2,19930.202,0,"DT")
3000615
"^DD",19930.2,19930.202,0,"NM","INITIALIZATION")

"^DD",19930.2,19930.202,0,"UP")
19930.2
"^DD",19930.2,19930.202,.01,0)
INITIALIZATION^WL^^0;1
"^DD",19930.2,19930.202,.01,"DT")
3000615
"^DD",19930.2,19930.203,0)
REQUIRED SUB-FIELD^^.01^1
"^DD",19930.2,19930.203,0,"DT")
3000615
"^DD",19930.2,19930.203,0,"NM","REQUIRED")

"^DD",19930.2,19930.203,0,"UP")
19930.2
"^DD",19930.2,19930.203,.01,0)
REQUIRED^WL^^0;1
"^DD",19930.2,19930.203,.01,"DT")
3000615
"^DD",19930.2,19930.204,0)
KEYS SUB-FIELD^^.01^1
"^DD",19930.2,19930.204,0,"DT")
3001011
"^DD",19930.2,19930.204,0,"IX","B",19930.204,.01)

"^DD",19930.2,19930.204,0,"NM","KEYS")

"^DD",19930.2,19930.204,0,"UP")
19930.2
"^DD",19930.2,19930.204,.01,0)
KEYS^MP19.1'^DIC(19.1,^0;1^Q
"^DD",19930.2,19930.204,.01,1,0)
^.1
"^DD",19930.2,19930.204,.01,1,1,0)
19930.204^B
"^DD",19930.2,19930.204,.01,1,1,1)
S ^CIAVOBJ(19930.2,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",19930.2,19930.204,.01,1,1,2)
K ^CIAVOBJ(19930.2,DA(1),3,"B",$E(X,1,30),DA)
"^DD",19930.2,19930.204,.01,3)
Enter security keys required to use this object.
"^DD",19930.2,19930.204,.01,"DT")
3001011
"^DD",19930.2,19930.206,0)
CATEGORY SUB-FIELD^^.01^1
"^DD",19930.2,19930.206,0,"DT")
3010822
"^DD",19930.2,19930.206,0,"IX","B",19930.206,.01)

"^DD",19930.2,19930.206,0,"NM","CATEGORY")

"^DD",19930.2,19930.206,0,"UP")
19930.2
"^DD",19930.2,19930.206,.01,0)
CATEGORY^MP19930.21'^CIAVOBJ(19930.21,^0;1^Q
"^DD",19930.2,19930.206,.01,1,0)
^.1
"^DD",19930.2,19930.206,.01,1,1,0)
19930.206^B
"^DD",19930.2,19930.206,.01,1,1,1)
S ^CIAVOBJ(19930.2,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",19930.2,19930.206,.01,1,1,2)
K ^CIAVOBJ(19930.2,DA(1),2,"B",$E(X,1,30),DA)
"^DD",19930.2,19930.206,.01,"DT")
3010822
"^DD",19930.2,19930.209,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",19930.2,19930.209,0,"DT")
3000615
"^DD",19930.2,19930.209,0,"NM","DESCRIPTION")

"^DD",19930.2,19930.209,0,"UP")
19930.2
"^DD",19930.2,19930.209,.01,0)
DESCRIPTION^W^^0;1
"^DD",19930.2,19930.209,.01,"DT")
3000615
"^DD",19930.2,19930.221,0)
USES SUB-FIELD^^.01^1
"^DD",19930.2,19930.221,0,"DT")
3010115
"^DD",19930.2,19930.221,0,"IX","B",19930.221,.01)

"^DD",19930.2,19930.221,0,"NM","USES")

"^DD",19930.2,19930.221,0,"UP")
19930.2
"^DD",19930.2,19930.221,.01,0)
USES^M*P19930.2'^CIAVOBJ(19930.2,^0;1^S DIC("S")="I DA'=Y" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",19930.2,19930.221,.01,1,0)
^.1
"^DD",19930.2,19930.221,.01,1,1,0)
19930.221^B
"^DD",19930.2,19930.221,.01,1,1,1)
S ^CIAVOBJ(19930.2,DA(1),9,"B",$E(X,1,30),DA)=""
"^DD",19930.2,19930.221,.01,1,1,2)
K ^CIAVOBJ(19930.2,DA(1),9,"B",$E(X,1,30),DA)
"^DD",19930.2,19930.221,.01,3)
Enter name of another object that this object uses.
"^DD",19930.2,19930.221,.01,"DT")
3010115
"^DD",19930.2,19930.223,0)
ALIAS SUB-FIELD^^.01^1
"^DD",19930.2,19930.223,0,"DT")
3060504
"^DD",19930.2,19930.223,0,"IX","B",19930.223,.01)

"^DD",19930.2,19930.223,0,"NM","ALIAS")

"^DD",19930.2,19930.223,0,"UP")
19930.2
"^DD",19930.2,19930.223,.01,0)
ALIAS^WL^^0;1^Q
"^DD",19930.2,19930.223,.01,1,0)
^.1
"^DD",19930.2,19930.223,.01,1,1,0)
19930.223^B
"^DD",19930.2,19930.223,.01,1,1,1)
S ^CIAVOBJ(19930.2,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",19930.2,19930.223,.01,1,1,2)
K ^CIAVOBJ(19930.2,DA(1),10,"B",$E(X,1,30),DA)
"^DD",19930.2,19930.223,.01,3)
Previous programmatic identifiers by which this object was known.
"^DD",19930.2,19930.223,.01,"DT")
3060504
"^DD",19930.2,19930.298,0)
TECHNICAL DESCRIPTION SUB-FIELD^^.01^1
"^DD",19930.2,19930.298,0,"DT")
3020808
"^DD",19930.2,19930.298,0,"NM","TECHNICAL DESCRIPTION")

"^DD",19930.2,19930.298,0,"UP")
19930.2
"^DD",19930.2,19930.298,.01,0)
TECHNICAL DESCRIPTION^W^^0;1^Q
"^DD",19930.2,19930.298,.01,3)
Enter technical description
"^DD",19930.2,19930.298,.01,"DT")
3020808
"^DD",19930.3,19930.3,0)
FIELD^^1^2
"^DD",19930.3,19930.3,0,"DDA")
N
"^DD",19930.3,19930.3,0,"DT")
3000815
"^DD",19930.3,19930.3,0,"IX","B",19930.3,.01)

"^DD",19930.3,19930.3,0,"NM","VUECENTRIC TEMPLATE REGISTRY")

"^DD",19930.3,19930.3,0,"PT",19930.994,.01)

"^DD",19930.3,19930.3,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19930.3,19930.3,.01,0)
NAME^RF^^0;1^K:$L(X)>80!($L(X)<3) X
"^DD",19930.3,19930.3,.01,1,0)
^.1
"^DD",19930.3,19930.3,.01,1,1,0)
19930.3^B
"^DD",19930.3,19930.3,.01,1,1,1)
S ^CIAVTPL("B",$E(X,1,30),DA)=""
"^DD",19930.3,19930.3,.01,1,1,2)
K ^CIAVTPL("B",$E(X,1,30),DA)
"^DD",19930.3,19930.3,.01,3)
Answer must be 3-80 characters in length.
"^DD",19930.3,19930.3,.01,"DT")
3000815
"^DD",19930.3,19930.3,1,0)
DATA^19930.301^^1;0
"^DD",19930.3,19930.301,0)
DATA SUB-FIELD^^.01^1
"^DD",19930.3,19930.301,0,"DT")
3000815
"^DD",19930.3,19930.301,0,"NM","DATA")

"^DD",19930.3,19930.301,0,"UP")
19930.3
"^DD",19930.3,19930.301,.01,0)
DATA^WL^^0;1^Q
"^DD",19930.3,19930.301,.01,"DT")
3000815
"^DD",19930.5,19930.5,0)
FIELD^^10^5
"^DD",19930.5,19930.5,0,"DT")
3120523
"^DD",19930.5,19930.5,0,"IX","B",19930.5,.01)

"^DD",19930.5,19930.5,0,"IX","C",19930.5,.01)

"^DD",19930.5,19930.5,0,"NM","VUECENTRIC SERIALIZATION")

"^DD",19930.5,19930.5,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19930.5,19930.5,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",19930.5,19930.5,.01,1,0)
^.1
"^DD",19930.5,19930.5,.01,1,1,0)
19930.5^B
"^DD",19930.5,19930.5,.01,1,1,1)
S ^CIAVSER("B",$E(X,1,30),DA)=""
"^DD",19930.5,19930.5,.01,1,1,2)
K ^CIAVSER("B",$E(X,1,30),DA)
"^DD",19930.5,19930.5,.01,1,2,0)
19930.5^C^MUMPS
"^DD",19930.5,19930.5,.01,1,2,1)
S ^CIAVSER("C",$$UP^XLFSTR(X),DA)=""
"^DD",19930.5,19930.5,.01,1,2,2)
K ^CIAVSER("C",$$UP^XLFSTR(X),DA)
"^DD",19930.5,19930.5,.01,1,2,"DT")
3120523
"^DD",19930.5,19930.5,.01,3)
Alias name of serialized object.
"^DD",19930.5,19930.5,.01,21,0)
^^1^1^3120522^
"^DD",19930.5,19930.5,.01,21,1,0)
This is the unique name that identifies this object type.
"^DD",19930.5,19930.5,.01,"DT")
3120523
"^DD",19930.5,19930.5,.5,0)
TARGET FILE^P1'^DIC(^0;2^Q
"^DD",19930.5,19930.5,.5,3)
File or subfile containing target object.
"^DD",19930.5,19930.5,.5,"DT")
3120523
"^DD",19930.5,19930.5,1,0)
CUSTOM SERIALIZER^F^^1;E1,20^K:$L(X)>20!($L(X)<1) X
"^DD",19930.5,19930.5,1,3)
Entry point (TAG^ROUTINE) for custom serializer.
"^DD",19930.5,19930.5,1,"DT")
3120523
"^DD",19930.5,19930.5,2,0)
CUSTOM DESERIALIZER^F^^2;E1,20^K:$L(X)>20!($L(X)<1) X
"^DD",19930.5,19930.5,2,3)
Entry point (TAG^ROUTINE) for custom deserializer.
"^DD",19930.5,19930.5,2,"DT")
3120523
"^DD",19930.5,19930.5,10,0)
PROPERTY^19930.51^^10;0
"^DD",19930.5,19930.5,10,"DT")
3120523
"^DD",19930.5,19930.51,0)
PROPERTY SUB-FIELD^^10^4
"^DD",19930.5,19930.51,0,"DT")
3120523
"^DD",19930.5,19930.51,0,"IX","B",19930.51,.01)

"^DD",19930.5,19930.51,0,"NM","PROPERTY")

"^DD",19930.5,19930.51,0,"UP")
19930.5
"^DD",19930.5,19930.51,.01,0)
PROPERTY^MF^^0;1^K:$L(X)>40!($L(X)<1) X
"^DD",19930.5,19930.51,.01,1,0)
^.1
"^DD",19930.5,19930.51,.01,1,1,0)
19930.51^B
"^DD",19930.5,19930.51,.01,1,1,1)
S ^CIAVSER(DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",19930.5,19930.51,.01,1,1,2)
K ^CIAVSER(DA(1),10,"B",$E(X,1,30),DA)
"^DD",19930.5,19930.51,.01,3)
Property name to be used in serialization.
"^DD",19930.5,19930.51,.01,"DT")
3120523
"^DD",19930.5,19930.51,1,0)
FIELD^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",19930.5,19930.51,1,3)
Field name or # corresponding to this property.
"^DD",19930.5,19930.51,1,"DT")
3120523
"^DD",19930.5,19930.51,2,0)
TYPE^RS^F:FREE TEXT;R:RAW;B:BOOLEAN;D:DATE;M:MULTIPLE;C:CUSTOM;O:OBJECT;W:WORD PROCESSING;^0;3^Q
"^DD",19930.5,19930.51,2,3)
Encoding type for this property.
"^DD",19930.5,19930.51,2,"DT")
3120523
"^DD",19930.5,19930.51,10,0)
CONTROL^F^^10;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",19930.5,19930.51,10,3)
Answer must be 1-250 characters in length.
"^DD",19930.5,19930.51,10,21,0)
^^7^7^3120523.103917
"^DD",19930.5,19930.51,10,21,1,0)
The format of this field depends on the value of the TYPE field.  For those
"^DD",19930.5,19930.51,10,21,2,0)
TYPE values not listed below, this field will be ignored.
"^DD",19930.5,19930.51,10,21,3,0)

"^DD",19930.5,19930.51,10,21,4,0)
C (Custom) - Executable M code.
"^DD",19930.5,19930.51,10,21,5,0)
O (Object) - Alias name of the target object.
"^DD",19930.5,19930.51,10,21,6,0)
M (Multiple) - Alias name of the multiple object.
"^DD",19930.5,19930.51,10,21,7,0)

"^DD",19930.5,19930.51,10,"DT")
3120523
"^DD",19941.21,19941.21,0)
FIELD^^7^14
"^DD",19941.21,19941.21,0,"DT")
3091007
"^DD",19941.21,19941.21,0,"IX","B",19941.21,.01)

"^DD",19941.21,19941.21,0,"NM","CIA EVENT TYPE")

"^DD",19941.21,19941.21,0,"PT",19930.995,.01)

"^DD",19941.21,19941.21,0,"PT",19941.23,1)

"^DD",19941.21,19941.21,0,"VRPK")
CAREWEB ENHANCEMENTS
"^DD",19941.21,19941.21,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",19941.21,19941.21,.01,1,0)
^.1
"^DD",19941.21,19941.21,.01,1,1,0)
19941.21^B
"^DD",19941.21,19941.21,.01,1,1,1)
S ^CIANB(19941.21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.21,.01,1,1,2)
K ^CIANB(19941.21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.21,.01,3)
Answer must be 3-100 characters in length.
"^DD",19941.21,19941.21,.01,"DT")
3030611
"^DD",19941.21,19941.21,1,0)
MONITOR^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,1,3)
M code to invoke monitor for this event type
"^DD",19941.21,19941.21,1,9)
@
"^DD",19941.21,19941.21,1,"DT")
3021021
"^DD",19941.21,19941.21,2,0)
DISABLE^S^0:NO;1:YES;^0;2^Q
"^DD",19941.21,19941.21,2,3)
Enter YES to disable this event type.
"^DD",19941.21,19941.21,2,21,0)
^.001^3^3^3030810^
"^DD",19941.21,19941.21,2,21,1,0)
If set to YES, this event type is disabled.  Once disabled, any attempt to 
"^DD",19941.21,19941.21,2,21,2,0)
enqueue the event will be ignored.  Disabling an event does not affect events
"^DD",19941.21,19941.21,2,21,3,0)
already in the queue. 
"^DD",19941.21,19941.21,2,"DT")
3030810
"^DD",19941.21,19941.21,3,0)
INTERVAL^NJ11,0X^^0;3^K:X<0!(X\1'=X) X
"^DD",19941.21,19941.21,3,3)
Enter the nominal polling interval in seconds.
"^DD",19941.21,19941.21,3,21,0)
^^10^10^3021021.152235
"^DD",19941.21,19941.21,3,21,1,0)
This is the nominal polling interval for the event in seconds.
"^DD",19941.21,19941.21,3,21,2,0)
The actual polling interval is dependent on the event polling
"^DD",19941.21,19941.21,3,21,3,0)
interval set for the client application as a site parameter.
"^DD",19941.21,19941.21,3,21,4,0)
The nominal polling interval guarantees that polling for this
"^DD",19941.21,19941.21,3,21,5,0)
event will not occur more frequently than this setting.
"^DD",19941.21,19941.21,3,21,6,0)
 
"^DD",19941.21,19941.21,3,21,7,0)
For events that are infrequent and/or do not require real time
"^DD",19941.21,19941.21,3,21,8,0)
notification, higher values may be selected for this field to
"^DD",19941.21,19941.21,3,21,9,0)
mitigate impact on system load. 
"^DD",19941.21,19941.21,3,21,10,0)

"^DD",19941.21,19941.21,3,"DT")
3021021
"^DD",19941.21,19941.21,4,0)
LOG EVENT^S^0:NO;1:YES;^0;4^Q
"^DD",19941.21,19941.21,4,3)
Enter YES to enable logging of this event.
"^DD",19941.21,19941.21,4,"DT")
3030611
"^DD",19941.21,19941.21,5,0)
LOG RETENTION^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",19941.21,19941.21,5,3)
Number of days to retain log entries.
"^DD",19941.21,19941.21,5,"DT")
3030611
"^DD",19941.21,19941.21,6,0)
POLLING METHOD^S^0:PER SESSION;1:PER INTERVAL;^0;6^Q
"^DD",19941.21,19941.21,6,3)
Determines how a monitored event is polled.
"^DD",19941.21,19941.21,6,21,0)
^^11^11^3030810.175145
"^DD",19941.21,19941.21,6,21,1,0)
For monitored events, this setting determines how the monitor is invoked
"^DD",19941.21,19941.21,6,21,2,0)
when the polling interval has been reached.  PER SESSION causes the event
"^DD",19941.21,19941.21,6,21,3,0)
monitor to be invoked for each active session, setting the user and
"^DD",19941.21,19941.21,6,21,4,0)
session context prior to each call.  PER INTERVAL cause the event monitor
"^DD",19941.21,19941.21,6,21,5,0)
to be invoked only once per interval.  No user or session context information
"^DD",19941.21,19941.21,6,21,6,0)
is available to the monitor in this case.
"^DD",19941.21,19941.21,6,21,7,0)

"^DD",19941.21,19941.21,6,21,8,0)
PER SESSION is appropriate for events that depend upon a specific user or
"^DD",19941.21,19941.21,6,21,9,0)
session (e.g., notifications).  PER INTERVAL is appropriate for events 
"^DD",19941.21,19941.21,6,21,10,0)
that are independent of a user or session (e.g., status events to display
"^DD",19941.21,19941.21,6,21,11,0)
the host date/time).
"^DD",19941.21,19941.21,6,"DT")
3030810
"^DD",19941.21,19941.21,7,0)
EVENT PROTOCOL^*P101'^ORD(101,^0;7^S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",19941.21,19941.21,7,12)
Restricts to Extended Action Protocols starting with CIAV
"^DD",19941.21,19941.21,7,12.1)
S DIC("S")="I $E(^(0),1,4)=""CIAV"",$P(^(0),U,4)=""X"""
"^DD",19941.21,19941.21,7,"DT")
3091007
"^DD",19941.21,19941.21,10,0)
DISPLAY LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19941.21,19941.21,10,3)
Logic to display stub info in log viewer.
"^DD",19941.21,19941.21,10,9)
@
"^DD",19941.21,19941.21,10,"DT")
3030611
"^DD",19941.21,19941.21,20,0)
PUBLICATION KEY^19941.212P^^20;0
"^DD",19941.21,19941.21,21,0)
SUBSCRIPTION KEY^19941.2121P^^21;0
"^DD",19941.21,19941.21,99,0)
DESCRIPTION^19941.2199^^99;0
"^DD",19941.21,19941.21,100,0)
ERROR DATE/TIME^D^^100;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",19941.21,19941.21,100,3)
Date and time of last error
"^DD",19941.21,19941.21,100,"DT")
3061129
"^DD",19941.21,19941.21,101,0)
ERROR TEXT^F^^100;2^K:$L(X)>240!($L(X)<1) X
"^DD",19941.21,19941.21,101,3)
Answer must be 1-240 characters in length.
"^DD",19941.21,19941.21,101,"DT")
3061129
"^DD",19941.21,19941.212,0)
PUBLICATION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.212,0,"DT")
3021021
"^DD",19941.21,19941.212,0,"IX","B",19941.212,.01)

"^DD",19941.21,19941.212,0,"NM","PUBLICATION KEY")

"^DD",19941.21,19941.212,0,"UP")
19941.21
"^DD",19941.21,19941.212,.01,0)
PUBLICATION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.212,.01,1,0)
^.1
"^DD",19941.21,19941.212,.01,1,1,0)
19941.212^B
"^DD",19941.21,19941.212,.01,1,1,1)
S ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.212,.01,1,1,2)
K ^CIANB(19941.21,DA(1),20,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.212,.01,3)
Security keys required to fire this event.
"^DD",19941.21,19941.212,.01,21,0)
^^2^2^3021021.152715
"^DD",19941.21,19941.212,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.212,.01,21,2,0)
the listed keys in order to fire an event of this type.
"^DD",19941.21,19941.212,.01,"DT")
3040310
"^DD",19941.21,19941.2121,0)
SUBSCRIPTION KEY SUB-FIELD^^.01^1
"^DD",19941.21,19941.2121,0,"DT")
3021021
"^DD",19941.21,19941.2121,0,"IX","B",19941.2121,.01)

"^DD",19941.21,19941.2121,0,"NM","SUBSCRIPTION KEY")

"^DD",19941.21,19941.2121,0,"UP")
19941.21
"^DD",19941.21,19941.2121,.01,0)
SUBSCRIPTION KEY^MP19.1'X^DIC(19.1,^0;1^Q
"^DD",19941.21,19941.2121,.01,1,0)
^.1
"^DD",19941.21,19941.2121,.01,1,1,0)
19941.2121^B
"^DD",19941.21,19941.2121,.01,1,1,1)
S ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)=""
"^DD",19941.21,19941.2121,.01,1,1,2)
K ^CIANB(19941.21,DA(1),21,"B",$E(X,1,30),DA)
"^DD",19941.21,19941.2121,.01,3)
Security keys required to receive this event type.
"^DD",19941.21,19941.2121,.01,21,0)
^^2^2^3021021.153002
"^DD",19941.21,19941.2121,.01,21,1,0)
If there are entries in this multiple, the user must possess at least one of
"^DD",19941.21,19941.2121,.01,21,2,0)
the listed keys in order subscribe to an event of this type. 
"^DD",19941.21,19941.2121,.01,"DT")
3040310
"^DD",19941.21,19941.2199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",19941.21,19941.2199,0,"DT")
3021021
"^DD",19941.21,19941.2199,0,"NM","DESCRIPTION")

"^DD",19941.21,19941.2199,0,"UP")
19941.21
"^DD",19941.21,19941.2199,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",19941.21,19941.2199,.01,3)
Enter a detailed description of this event type.
"^DD",19941.21,19941.2199,.01,"DT")
3021021
"^DIC",8989.51,8989.51,0)
PARAMETER DEFINITION^8989.51
"^DIC",8989.51,8989.51,0,"GL")
^XTV(8989.51,
"^DIC",8989.51,8989.51,"%D",0)
^^3^3^2980920^
"^DIC",8989.51,8989.51,"%D",1,0)
This file contains the characteristics of parameters.  Entries in this
"^DIC",8989.51,8989.51,"%D",2,0)
file must be namespaced and they are exported by the package which owns
"^DIC",8989.51,8989.51,"%D",3,0)
them.
"^DIC",8989.51,"B","PARAMETER DEFINITION",8989.51)

"^DIC",8989.52,8989.52,0)
PARAMETER TEMPLATE^8989.52
"^DIC",8989.52,8989.52,0,"GL")
^XTV(8989.52,
"^DIC",8989.52,8989.52,"%",0)
^1.005^^0
"^DIC",8989.52,8989.52,"%D",0)
^^4^4^2980920^
"^DIC",8989.52,8989.52,"%D",1,0)
This file contains templates which allow developers to group entries in
"^DIC",8989.52,8989.52,"%D",2,0)
the PARAMETER DEFINITION file (#8989.51) together for editing.  Entries in
"^DIC",8989.52,8989.52,"%D",3,0)
this file must be namespaced and they are exported by the package which
"^DIC",8989.52,8989.52,"%D",4,0)
owns them.
"^DIC",8989.52,"B","PARAMETER TEMPLATE",8989.52)

"^DIC",19930.2,19930.2,0)
VUECENTRIC OBJECT REGISTRY^19930.2
"^DIC",19930.2,19930.2,0,"GL")
^CIAVOBJ(19930.2,
"^DIC",19930.2,19930.2,"%",0)
^1.005^^0
"^DIC",19930.2,"B","VUECENTRIC OBJECT REGISTRY",19930.2)

"^DIC",19930.3,19930.3,0)
VUECENTRIC TEMPLATE REGISTRY^19930.3
"^DIC",19930.3,19930.3,0,"GL")
^CIAVTPL(
"^DIC",19930.3,19930.3,"%",0)
^1.005^^0
"^DIC",19930.3,"B","VUECENTRIC TEMPLATE REGISTRY",19930.3)

"^DIC",19930.5,19930.5,0)
VUECENTRIC SERIALIZATION^19930.5
"^DIC",19930.5,19930.5,0,"GL")
^CIAVSER(
"^DIC",19930.5,"B","VUECENTRIC SERIALIZATION",19930.5)

"^DIC",19941.21,19941.21,0)
CIA EVENT TYPE^19941.21
"^DIC",19941.21,19941.21,0,"GL")
^CIANB(19941.21,
"^DIC",19941.21,"B","CIA EVENT TYPE",19941.21)

**END**
**END**
